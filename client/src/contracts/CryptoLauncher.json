{
  "contractName": "CryptoLauncher",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "_launchedTokens",
      "outputs": [
        {
          "internalType": "enum CryptoLauncher.TokenType",
          "name": "tokenType",
          "type": "uint8"
        },
        {
          "internalType": "contract ERC20",
          "name": "token",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMyLaunchedTokensLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getMyLaunchedToken",
      "outputs": [
        {
          "components": [
            {
              "internalType": "enum CryptoLauncher.TokenType",
              "name": "tokenType",
              "type": "uint8"
            },
            {
              "internalType": "contract ERC20",
              "name": "token",
              "type": "address"
            }
          ],
          "internalType": "struct CryptoLauncher.LaunchedToken",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "totalSupply",
          "type": "uint256"
        }
      ],
      "name": "launchSimpleToken",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "totalSupply",
          "type": "uint256"
        }
      ],
      "name": "launchMintableToken",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "totalSupply",
          "type": "uint256"
        }
      ],
      "name": "launchBurnableToken",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "totalSupply",
          "type": "uint256"
        }
      ],
      "name": "launchMintableBurnableToken",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "action",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "setFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawFunds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"_launchedTokens\",\"outputs\":[{\"internalType\":\"enum CryptoLauncher.TokenType\",\"name\":\"tokenType\",\"type\":\"uint8\"},{\"internalType\":\"contract ERC20\",\"name\":\"token\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getMyLaunchedToken\",\"outputs\":[{\"components\":[{\"internalType\":\"enum CryptoLauncher.TokenType\",\"name\":\"tokenType\",\"type\":\"uint8\"},{\"internalType\":\"contract ERC20\",\"name\":\"token\",\"type\":\"address\"}],\"internalType\":\"struct CryptoLauncher.LaunchedToken\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMyLaunchedTokensLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"}],\"name\":\"launchBurnableToken\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"}],\"name\":\"launchMintableBurnableToken\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"}],\"name\":\"launchMintableToken\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"}],\"name\":\"launchSimpleToken\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"action\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"setFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawFunds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/CryptoLauncher.sol\":\"CryptoLauncher\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x24e0364e503a9bbde94c715d26573a76f14cd2a202d45f96f52134ab806b67b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e12cbaa7378fd9b62280e4e1d164bedcb4399ce238f5f98fc0eefb7e50577981\",\"dweb:/ipfs/QmXRoFGUgfsaRkoPT5bxNMtSayKTQ8GZATLPXf69HcRA51\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xd1d8caaeb45f78e0b0715664d56c220c283c89bf8b8c02954af86404d6b367f8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://300a0cc7be3b26c96c22a47ffa9530a585e1c4f2dba3021d9bf309dc63007487\",\"dweb:/ipfs/QmQmxsvxK6CaJmQ4D8vDCYPLHMqcMmZLcBqedG4GFAbzu9\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x61437cb513a887a1bbad006e7b1c8b414478427d33de47c5600af3c748f108da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c3d0973630ed74f2b5ce3944677a885dc70ec32fc83b35f55045a10224da32b\",\"dweb:/ipfs/QmbefZ5RoEZKNHXCALfh683PnaNYzKPcKMFjyY1DVAgq8A\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x0707ddb033e6bbb36546b9d58bb6f043076ceac7a10792a71dfd957583acde09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f16258ce35ab9409430a2213b3a76845c06f01cbf2e6c2f5229d5efad1367b2\",\"dweb:/ipfs/QmTKeY9WgozRyDAQuX3zgLRbS1maWGuA5VJZL6n3GcptJo\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"project:/contracts/CryptoLauncher.sol\":{\"keccak256\":\"0x19eab9faad3bffab622a0cf0ba9f79c22e2c8a8b5f033154daf0675e3e83c41b\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://48a6c243c554db9e0d56d86d00d4522a6e40f45df008b8c146460e19f9ed6b18\",\"dweb:/ipfs/QmTmeJKS9a14A3x2KgKM2vp5453GvFqhyrABa39UNR7WVW\"]},\"project:/contracts/tokens/CLBurnableToken.sol\":{\"keccak256\":\"0x68a66fcd2f5d8433abbbdc18264790e556ca7739454ebb5b8ab8be44d0c96295\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://22404b91e9b998fcb7ea27daab733fe099ee3916e903aaf5ef2479f5ce0033b9\",\"dweb:/ipfs/Qmb7bB9SQG2C6Yp5m2pwARfDR5RLEUDyMTex2ZvmFtmGit\"]},\"project:/contracts/tokens/CLMintableBurnableToken.sol\":{\"keccak256\":\"0x1557fd24d3ff32dc993be6793fc123a69b514614a117549d802ddc177fa92ebf\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://bc76f22cde35064119a954b718847d4ca363d15877f9b824108e9950779287cf\",\"dweb:/ipfs/QmTExSLoXEaKu1jGL3UdUq3Lr9D8GqHACvQq44J4D53ynk\"]},\"project:/contracts/tokens/CLMintableToken.sol\":{\"keccak256\":\"0x31f02a169db292057495540bf2fd3d6dd3ffde2bbcf2b4933a95041551008879\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://372f4c6bdb512167064d489d70e00e6ea79432d79e669ad18ea5ee07158be4e6\",\"dweb:/ipfs/QmRyxU8fCPrMhQMNYUNMT85TUjLHojCCgzgo57NowcAnpZ\"]},\"project:/contracts/tokens/CLTokenSimple.sol\":{\"keccak256\":\"0x0c3544c6c21c224a82060436007e5b9f44183f025b22c710cde51721d3695a93\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://defc7c7d07316b884086f660e824d2a37e01e9805d0fd591443d876e3b945b52\",\"dweb:/ipfs/QmaApQ3CHYb2U1Ye8LjV6zyLF2CnzqkFbvLsqcNvuZqMEt\"]}},\"version\":1}",
  "bytecode": "0x6080604052600080546001600160a01b031916735b38da6a701c568545dcfcb03fcb875f56beddc417905566470de4df8200006001556658d15e17628000600255666a94d74f430000600355668e1bc9bf04000060045534801561006257600080fd5b5061509f806100726000396000f3fe608060405260043610620000925760003560e01c80634f24b34b11620000615780634f24b34b146200011d57806352f7c98814620001445780635ba6f26514620001695780638ffadfe41462000180578063aee2a82e14620001975762000092565b8063160c37ab146200009757806324600fc314620000d5578063430dc3c814620000ef5780634d59d1541462000106575b600080fd5b348015620000a457600080fd5b50620000bc620000b636600462000737565b620001cb565b604051620000cc9291906200088c565b60405180910390f35b348015620000e257600080fd5b50620000ed6200020d565b005b620000ed620001003660046200076f565b6200026a565b620000ed620001173660046200076f565b6200037b565b3480156200012a57600080fd5b506200013562000406565b604051620000cc919062000988565b3480156200015157600080fd5b50620000ed62000163366004620007f9565b62000419565b620000ed6200017a3660046200076f565b62000495565b620000ed620001913660046200076f565b6200051f565b348015620001a457600080fd5b50620001bc620001b6366004620007e0565b620005aa565b604051620000cc91906200095c565b60056020528160005260406000208181548110620001e857600080fd5b60009182526020909120015460ff8116925061010090046001600160a01b0316905082565b6000546001600160a01b03163314620002435760405162461bcd60e51b81526004016200023a90620008ff565b60405180910390fd5b60405133904780156108fc02916000818181858888f193505050506200026857600080fd5b565b6002543410156200028f5760405162461bcd60e51b81526004016200023a9062000936565b600083838333604051620002a3906200065f565b620002b29493929190620008b4565b604051809103906000f080158015620002cf573d6000803e3d6000fd5b50336000908152600560205260409081902081518083019092529192508060015b81526001600160a01b038416602091820152825460018181018555600094855291909320825193018054929390929091839160ff1916908360038111156200034857634e487b7160e01b600052602160045260246000fd5b02179055506020919091015181546001600160a01b0390911661010002610100600160a81b031990911617905550505050565b600454341015620003a05760405162461bcd60e51b81526004016200023a9062000936565b600083838333604051620003b4906200066d565b620003c39493929190620008b4565b604051809103906000f080158015620003e0573d6000803e3d6000fd5b5033600090815260056020526040908190208151808301909252919250806003620002f0565b3360009081526005602052604090205490565b6000546001600160a01b03163314620004465760405162461bcd60e51b81526004016200023a90620008ff565b816200045757600181905562000491565b60018214156200046c57600281905562000491565b60028214156200048157600381905562000491565b6003821415620004915760028190555b5050565b600154341015620004ba5760405162461bcd60e51b81526004016200023a9062000936565b600083838333604051620004ce906200067b565b620004dd9493929190620008b4565b604051809103906000f080158015620004fa573d6000803e3d6000fd5b50336000908152600560205260408082208151808301909252929350908190620002f0565b600354341015620005445760405162461bcd60e51b81526004016200023a9062000936565b600083838333604051620005589062000689565b620005679493929190620008b4565b604051809103906000f08015801562000584573d6000803e3d6000fd5b5033600090815260056020526040908190208151808301909252919250806002620002f0565b620005b462000697565b336000908152600560205260409020805483908110620005e457634e487b7160e01b600052603260045260246000fd5b600091825260209091206040805180820190915291018054829060ff1660038111156200062157634e487b7160e01b600052602160045260246000fd5b60038111156200064157634e487b7160e01b600052602160045260246000fd5b8152905461010090046001600160a01b031660209091015292915050565b61120f80620009a883390190565b61149b8062001bb783390190565b610f6a806200305283390190565b6110ae8062003fbc83390190565b604080518082019091526000808252602082015290565b600082601f830112620006bf578081fd5b813567ffffffffffffffff80821115620006dd57620006dd62000991565b604051601f8301601f19168101602001828111828210171562000704576200070462000991565b6040528281528483016020018610156200071c578384fd5b82602086016020830137918201602001929092529392505050565b600080604083850312156200074a578182fd5b82356001600160a01b038116811462000761578283fd5b946020939093013593505050565b60008060006060848603121562000784578081fd5b833567ffffffffffffffff808211156200079c578283fd5b620007aa87838801620006ae565b94506020860135915080821115620007c0578283fd5b50620007cf86828701620006ae565b925050604084013590509250925092565b600060208284031215620007f2578081fd5b5035919050565b600080604083850312156200080c578182fd5b50508035926020909101359150565b600481106200083a57634e487b7160e01b600052602160045260246000fd5b9052565b60008151808452815b81811015620008655760208185018101518683018201520162000847565b81811115620008775782602083870101525b50601f01601f19169290920160200192915050565b604081016200089c82856200081b565b6001600160a01b039290921660209190910152919050565b600060808252620008c960808301876200083e565b8281036020840152620008dd81876200083e565b604084019590955250506001600160a01b039190911660609091015292915050565b60208082526017908201527f43616c6c6572206973206e6f7420746865206f776e6572000000000000000000604082015260600190565b6020808252600c908201526b119959481c995c5d5a5c995960a21b604082015260600190565b6000604082019050620009718284516200081b565b6020928301516001600160a01b0316919092015290565b90815260200190565b634e487b7160e01b600052604160045260246000fdfe60806040523480156200001157600080fd5b506040516200120f3803806200120f833981016040819052620000349162000342565b8351849084906200004d906003906020850190620001f1565b50805162000063906004906020840190620001f1565b505050620000806200007a620000b460201b60201c565b620000b8565b6200008b81620000b8565b620000aa81620000a484670de0b6b3a76400006200042e565b6200010a565b50505050620004b9565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0382166200013c5760405162461bcd60e51b81526004016200013390620003d3565b60405180910390fd5b6200014a60008383620001ec565b80600260008282546200015e919062000413565b90915550506001600160a01b038216600090815260208190526040812080548392906200018d90849062000413565b90915550506040516001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90620001d29085906200040a565b60405180910390a3620001e860008383620001ec565b5050565b505050565b828054620001ff9062000450565b90600052602060002090601f0160209004810192826200022357600085556200026e565b82601f106200023e57805160ff19168380011785556200026e565b828001600101855582156200026e579182015b828111156200026e57825182559160200191906001019062000251565b506200027c92915062000280565b5090565b5b808211156200027c576000815560010162000281565b600082601f830112620002a8578081fd5b81516001600160401b0380821115620002c557620002c5620004a3565b6040516020601f8401601f1916820181018381118382101715620002ed57620002ed620004a3565b604052838252858401810187101562000304578485fd5b8492505b8383101562000327578583018101518284018201529182019162000308565b838311156200033857848185840101525b5095945050505050565b6000806000806080858703121562000358578384fd5b84516001600160401b03808211156200036f578586fd5b6200037d8883890162000297565b9550602087015191508082111562000393578485fd5b50620003a28782880162000297565b60408701516060880151919550935090506001600160a01b0381168114620003c8578182fd5b939692955090935050565b6020808252601f908201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604082015260600190565b90815260200190565b600082198211156200042957620004296200048d565b500190565b60008160001904831182151516156200044b576200044b6200048d565b500290565b6002810460018216806200046557607f821691505b602082108114156200048757634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b610d4680620004c96000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806370a0823111610097578063a457c2d711610066578063a457c2d7146101d5578063a9059cbb146101e8578063dd62ed3e146101fb578063f2fde38b1461020e576100f5565b806370a082311461019d578063715018a6146101b05780638da5cb5b146101b857806395d89b41146101cd576100f5565b806323b872dd116100d357806323b872dd1461014d578063313ce56714610160578063395093511461017557806340c10f1914610188576100f5565b806306fdde03146100fa578063095ea7b31461011857806318160ddd14610138575b600080fd5b610102610221565b60405161010f91906109b4565b60405180910390f35b61012b61012636600461096c565b6102b3565b60405161010f91906109a9565b6101406102d0565b60405161010f9190610c9a565b61012b61015b366004610931565b6102d6565b61016861036f565b60405161010f9190610ca3565b61012b61018336600461096c565b610374565b61019b61019636600461096c565b6103c8565b005b6101406101ab3660046108de565b610415565b61019b610434565b6101c061047f565b60405161010f9190610995565b61010261048e565b61012b6101e336600461096c565b61049d565b61012b6101f636600461096c565b610516565b6101406102093660046108ff565b61052a565b61019b61021c3660046108de565b610555565b60606003805461023090610cd5565b80601f016020809104026020016040519081016040528092919081815260200182805461025c90610cd5565b80156102a95780601f1061027e576101008083540402835291602001916102a9565b820191906000526020600020905b81548152906001019060200180831161028c57829003601f168201915b5050505050905090565b60006102c76102c06105c6565b84846105ca565b50600192915050565b60025490565b60006102e384848461067e565b6001600160a01b0384166000908152600160205260408120816103046105c6565b6001600160a01b03166001600160a01b03168152602001908152602001600020549050828110156103505760405162461bcd60e51b815260040161034790610b18565b60405180910390fd5b6103648561035c6105c6565b8584036105ca565b506001949350505050565b601290565b60006102c76103816105c6565b84846001600061038f6105c6565b6001600160a01b03908116825260208083019390935260409182016000908120918b16815292529020546103c39190610cb1565b6105ca565b6103d06105c6565b6001600160a01b03166103e161047f565b6001600160a01b0316146104075760405162461bcd60e51b815260040161034790610b60565b61041182826107a8565b5050565b6001600160a01b0381166000908152602081905260409020545b919050565b61043c6105c6565b6001600160a01b031661044d61047f565b6001600160a01b0316146104735760405162461bcd60e51b815260040161034790610b60565b61047d6000610870565b565b6005546001600160a01b031690565b60606004805461023090610cd5565b600080600160006104ac6105c6565b6001600160a01b03908116825260208083019390935260409182016000908120918816815292529020549050828110156104f85760405162461bcd60e51b815260040161034790610c1e565b61050c6105036105c6565b858584036105ca565b5060019392505050565b60006102c76105236105c6565b848461067e565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61055d6105c6565b6001600160a01b031661056e61047f565b6001600160a01b0316146105945760405162461bcd60e51b815260040161034790610b60565b6001600160a01b0381166105ba5760405162461bcd60e51b815260040161034790610a4a565b6105c381610870565b50565b3390565b6001600160a01b0383166105f05760405162461bcd60e51b815260040161034790610bda565b6001600160a01b0382166106165760405162461bcd60e51b815260040161034790610a90565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92590610671908590610c9a565b60405180910390a3505050565b6001600160a01b0383166106a45760405162461bcd60e51b815260040161034790610b95565b6001600160a01b0382166106ca5760405162461bcd60e51b815260040161034790610a07565b6106d58383836108c2565b6001600160a01b0383166000908152602081905260409020548181101561070e5760405162461bcd60e51b815260040161034790610ad2565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610745908490610cb1565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161078f9190610c9a565b60405180910390a36107a28484846108c2565b50505050565b6001600160a01b0382166107ce5760405162461bcd60e51b815260040161034790610c63565b6107da600083836108c2565b80600260008282546107ec9190610cb1565b90915550506001600160a01b03821660009081526020819052604081208054839290610819908490610cb1565b90915550506040516001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061085c908590610c9a565b60405180910390a3610411600083836108c2565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b505050565b80356001600160a01b038116811461042f57600080fd5b6000602082840312156108ef578081fd5b6108f8826108c7565b9392505050565b60008060408385031215610911578081fd5b61091a836108c7565b9150610928602084016108c7565b90509250929050565b600080600060608486031215610945578081fd5b61094e846108c7565b925061095c602085016108c7565b9150604084013590509250925092565b6000806040838503121561097e578182fd5b610987836108c7565b946020939093013593505050565b6001600160a01b0391909116815260200190565b901515815260200190565b6000602080835283518082850152825b818110156109e0578581018301518582016040015282016109c4565b818111156109f15783604083870101525b50601f01601f1916929092016040019392505050565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b60208082526022908201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604082015261737360f01b606082015260800190565b60208082526026908201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604082015265616c616e636560d01b606082015260800190565b60208082526028908201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616040820152676c6c6f77616e636560c01b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526025908201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604082015264647265737360d81b606082015260800190565b60208082526024908201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646040820152637265737360e01b606082015260800190565b60208082526025908201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604082015264207a65726f60d81b606082015260800190565b6020808252601f908201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604082015260600190565b90815260200190565b60ff91909116815260200190565b60008219821115610cd057634e487b7160e01b81526011600452602481fd5b500190565b600281046001821680610ce957607f821691505b60208210811415610d0a57634e487b7160e01b600052602260045260246000fd5b5091905056fea2646970667358221220a3f171e2e42ca39d5edf706851e6d167dbb673bf400745bdd59ee96f93dcbe6064736f6c6343000800003360806040523480156200001157600080fd5b506040516200149b3803806200149b833981016040819052620000349162000342565b8351849084906200004d906003906020850190620001f1565b50805162000063906004906020840190620001f1565b505050620000806200007a620000b460201b60201c565b620000b8565b6200008b81620000b8565b620000aa81620000a484670de0b6b3a76400006200042e565b6200010a565b50505050620004b9565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0382166200013c5760405162461bcd60e51b81526004016200013390620003d3565b60405180910390fd5b6200014a60008383620001ec565b80600260008282546200015e919062000413565b90915550506001600160a01b038216600090815260208190526040812080548392906200018d90849062000413565b90915550506040516001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90620001d29085906200040a565b60405180910390a3620001e860008383620001ec565b5050565b505050565b828054620001ff9062000450565b90600052602060002090601f0160209004810192826200022357600085556200026e565b82601f106200023e57805160ff19168380011785556200026e565b828001600101855582156200026e579182015b828111156200026e57825182559160200191906001019062000251565b506200027c92915062000280565b5090565b5b808211156200027c576000815560010162000281565b600082601f830112620002a8578081fd5b81516001600160401b0380821115620002c557620002c5620004a3565b6040516020601f8401601f1916820181018381118382101715620002ed57620002ed620004a3565b604052838252858401810187101562000304578485fd5b8492505b8383101562000327578583018101518284018201529182019162000308565b838311156200033857848185840101525b5095945050505050565b6000806000806080858703121562000358578384fd5b84516001600160401b03808211156200036f578586fd5b6200037d8883890162000297565b9550602087015191508082111562000393578485fd5b50620003a28782880162000297565b60408701516060880151919550935090506001600160a01b0381168114620003c8578182fd5b939692955090935050565b6020808252601f908201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604082015260600190565b90815260200190565b600082198211156200042957620004296200048d565b500190565b60008160001904831182151516156200044b576200044b6200048d565b500290565b6002810460018216806200046557607f821691505b602082108114156200048757634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b610fd280620004c96000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c806370a08231116100a257806395d89b411161007157806395d89b4114610209578063a457c2d714610211578063a9059cbb14610224578063dd62ed3e14610237578063f2fde38b1461024a5761010b565b806370a08231146101c6578063715018a6146101d957806379cc6790146101e15780638da5cb5b146101f45761010b565b8063313ce567116100de578063313ce56714610176578063395093511461018b57806340c10f191461019e57806342966c68146101b35761010b565b806306fdde0314610110578063095ea7b31461012e57806318160ddd1461014e57806323b872dd14610163575b600080fd5b61011861025d565b6040516101259190610b58565b60405180910390f35b61014161013c366004610af8565b6102ef565b6040516101259190610b4d565b61015661030c565b6040516101259190610f05565b610141610171366004610abd565b610312565b61017e6103ab565b6040516101259190610f0e565b610141610199366004610af8565b6103b0565b6101b16101ac366004610af8565b610404565b005b6101b16101c1366004610b21565b610451565b6101566101d4366004610a6a565b610465565b6101b1610484565b6101b16101ef366004610af8565b6104cf565b6101fc610522565b6040516101259190610b39565b610118610531565b61014161021f366004610af8565b610540565b610141610232366004610af8565b6105b9565b610156610245366004610a8b565b6105cd565b6101b1610258366004610a6a565b6105f8565b60606003805461026c90610f4b565b80601f016020809104026020016040519081016040528092919081815260200182805461029890610f4b565b80156102e55780601f106102ba576101008083540402835291602001916102e5565b820191906000526020600020905b8154815290600101906020018083116102c857829003601f168201915b5050505050905090565b60006103036102fc610666565b848461066a565b50600192915050565b60025490565b600061031f84848461071e565b6001600160a01b038416600090815260016020526040812081610340610666565b6001600160a01b03166001600160a01b031681526020019081526020016000205490508281101561038c5760405162461bcd60e51b815260040161038390610cfe565b60405180910390fd5b6103a085610398610666565b85840361066a565b506001949350505050565b601290565b60006103036103bd610666565b8484600160006103cb610666565b6001600160a01b03908116825260208083019390935260409182016000908120918b16815292529020546103ff9190610f1c565b61066a565b61040c610666565b6001600160a01b031661041d610522565b6001600160a01b0316146104435760405162461bcd60e51b815260040161038390610d46565b61044d8282610848565b5050565b61046261045c610666565b82610910565b50565b6001600160a01b0381166000908152602081905260409020545b919050565b61048c610666565b6001600160a01b031661049d610522565b6001600160a01b0316146104c35760405162461bcd60e51b815260040161038390610d46565b6104cd6000610a01565b565b60006104dd83610245610666565b9050818110156104ff5760405162461bcd60e51b815260040161038390610d7b565b6105138361050b610666565b84840361066a565b61051d8383610910565b505050565b6005546001600160a01b031690565b60606004805461026c90610f4b565b6000806001600061054f610666565b6001600160a01b039081168252602080830193909352604091820160009081209188168152925290205490508281101561059b5760405162461bcd60e51b815260040161038390610e89565b6105af6105a6610666565b8585840361066a565b5060019392505050565b60006103036105c6610666565b848461071e565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b610600610666565b6001600160a01b0316610611610522565b6001600160a01b0316146106375760405162461bcd60e51b815260040161038390610d46565b6001600160a01b03811661065d5760405162461bcd60e51b815260040161038390610c30565b61046281610a01565b3390565b6001600160a01b0383166106905760405162461bcd60e51b815260040161038390610e45565b6001600160a01b0382166106b65760405162461bcd60e51b815260040161038390610c76565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92590610711908590610f05565b60405180910390a3505050565b6001600160a01b0383166107445760405162461bcd60e51b815260040161038390610e00565b6001600160a01b03821661076a5760405162461bcd60e51b815260040161038390610bab565b61077583838361051d565b6001600160a01b038316600090815260208190526040902054818110156107ae5760405162461bcd60e51b815260040161038390610cb8565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906107e5908490610f1c565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161082f9190610f05565b60405180910390a361084284848461051d565b50505050565b6001600160a01b03821661086e5760405162461bcd60e51b815260040161038390610ece565b61087a6000838361051d565b806002600082825461088c9190610f1c565b90915550506001600160a01b038216600090815260208190526040812080548392906108b9908490610f1c565b90915550506040516001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906108fc908590610f05565b60405180910390a361044d6000838361051d565b6001600160a01b0382166109365760405162461bcd60e51b815260040161038390610dbf565b6109428260008361051d565b6001600160a01b0382166000908152602081905260409020548181101561097b5760405162461bcd60e51b815260040161038390610bee565b6001600160a01b03831660009081526020819052604081208383039055600280548492906109aa908490610f34565b90915550506040516000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906109ed908690610f05565b60405180910390a361051d8360008461051d565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80356001600160a01b038116811461047f57600080fd5b600060208284031215610a7b578081fd5b610a8482610a53565b9392505050565b60008060408385031215610a9d578081fd5b610aa683610a53565b9150610ab460208401610a53565b90509250929050565b600080600060608486031215610ad1578081fd5b610ada84610a53565b9250610ae860208501610a53565b9150604084013590509250925092565b60008060408385031215610b0a578182fd5b610b1383610a53565b946020939093013593505050565b600060208284031215610b32578081fd5b5035919050565b6001600160a01b0391909116815260200190565b901515815260200190565b6000602080835283518082850152825b81811015610b8457858101830151858201604001528201610b68565b81811115610b955783604083870101525b50601f01601f1916929092016040019392505050565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526022908201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604082015261636560f01b606082015260800190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b60208082526022908201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604082015261737360f01b606082015260800190565b60208082526026908201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604082015265616c616e636560d01b606082015260800190565b60208082526028908201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616040820152676c6c6f77616e636560c01b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526024908201527f45524332303a206275726e20616d6f756e74206578636565647320616c6c6f77604082015263616e636560e01b606082015260800190565b60208082526021908201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736040820152607360f81b606082015260800190565b60208082526025908201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604082015264647265737360d81b606082015260800190565b60208082526024908201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646040820152637265737360e01b606082015260800190565b60208082526025908201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604082015264207a65726f60d81b606082015260800190565b6020808252601f908201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604082015260600190565b90815260200190565b60ff91909116815260200190565b60008219821115610f2f57610f2f610f86565b500190565b600082821015610f4657610f46610f86565b500390565b600281046001821680610f5f57607f821691505b60208210811415610f8057634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220c991236c201fb6bc5209cd5e62c9e1d46a871a363696dcb1a92424fe41f31f1964736f6c6343000800003360806040523480156200001157600080fd5b5060405162000f6a38038062000f6a8339810160408190526200003491620002e1565b8351849084906200004d90600390602085019062000190565b5080516200006390600490602084019062000190565b5050506200009a816200007b620000a460201b60201c565b6200008890600a6200041a565b62000094908562000512565b620000a9565b505050506200059d565b601290565b6001600160a01b038216620000db5760405162461bcd60e51b8152600401620000d29062000372565b60405180910390fd5b620000e9600083836200018b565b8060026000828254620000fd9190620003b2565b90915550506001600160a01b038216600090815260208190526040812080548392906200012c908490620003b2565b90915550506040516001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9062000171908590620003a9565b60405180910390a362000187600083836200018b565b5050565b505050565b8280546200019e9062000534565b90600052602060002090601f016020900481019282620001c257600085556200020d565b82601f10620001dd57805160ff19168380011785556200020d565b828001600101855582156200020d579182015b828111156200020d578251825591602001919060010190620001f0565b506200021b9291506200021f565b5090565b5b808211156200021b576000815560010162000220565b600082601f83011262000247578081fd5b81516001600160401b038082111562000264576200026462000587565b6040516020601f8401601f19168201810183811183821017156200028c576200028c62000587565b6040528382528584018101871015620002a3578485fd5b8492505b83831015620002c65785830181015182840182015291820191620002a7565b83831115620002d757848185840101525b5095945050505050565b60008060008060808587031215620002f7578384fd5b84516001600160401b03808211156200030e578586fd5b6200031c8883890162000236565b9550602087015191508082111562000332578485fd5b50620003418782880162000236565b60408701516060880151919550935090506001600160a01b038116811462000367578182fd5b939692955090935050565b6020808252601f908201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604082015260600190565b90815260200190565b60008219821115620003c857620003c862000571565b500190565b80825b6001808611620003e1575062000411565b818704821115620003f657620003f662000571565b808616156200040457918102915b9490941c938002620003d0565b94509492505050565b60006200042e60001960ff85168462000435565b9392505050565b60008262000446575060016200042e565b8162000455575060006200042e565b81600181146200046e57600281146200047957620004ad565b60019150506200042e565b60ff8411156200048d576200048d62000571565b6001841b915084821115620004a657620004a662000571565b506200042e565b5060208310610133831016604e8410600b8410161715620004e5575081810a83811115620004df57620004df62000571565b6200042e565b620004f48484846001620003cd565b80860482111562000509576200050962000571565b02949350505050565b60008160001904831182151516156200052f576200052f62000571565b500290565b6002810460018216806200054957607f821691505b602082108114156200056b57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6109bd80620005ad6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012957806370a082311461013c57806395d89b411461014f578063a457c2d714610157578063a9059cbb1461016a578063dd62ed3e1461017d576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ec57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b6610190565b6040516100c391906106dd565b60405180910390f35b6100df6100da3660046106a9565b610222565b6040516100c391906106d2565b6100f461023f565b6040516100c39190610911565b6100df61010f36600461066e565b610245565b61011c6102de565b6040516100c3919061091a565b6100df6101373660046106a9565b6102e3565b6100f461014a36600461061b565b610337565b6100b6610356565b6100df6101653660046106a9565b610365565b6100df6101783660046106a9565b6103de565b6100f461018b36600461063c565b6103f2565b60606003805461019f9061094c565b80601f01602080910402602001604051908101604052809291908181526020018280546101cb9061094c565b80156102185780601f106101ed57610100808354040283529160200191610218565b820191906000526020600020905b8154815290600101906020018083116101fb57829003601f168201915b5050505050905090565b600061023661022f61041d565b8484610421565b50600192915050565b60025490565b60006102528484846104d5565b6001600160a01b03841660009081526001602052604081208161027361041d565b6001600160a01b03166001600160a01b03168152602001908152602001600020549050828110156102bf5760405162461bcd60e51b81526004016102b6906107fb565b60405180910390fd5b6102d3856102cb61041d565b858403610421565b506001949350505050565b601290565b60006102366102f061041d565b8484600160006102fe61041d565b6001600160a01b03908116825260208083019390935260409182016000908120918b16815292529020546103329190610928565b610421565b6001600160a01b0381166000908152602081905260409020545b919050565b60606004805461019f9061094c565b6000806001600061037461041d565b6001600160a01b03908116825260208083019390935260409182016000908120918816815292529020549050828110156103c05760405162461bcd60e51b81526004016102b6906108cc565b6103d46103cb61041d565b85858403610421565b5060019392505050565b60006102366103eb61041d565b84846104d5565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3390565b6001600160a01b0383166104475760405162461bcd60e51b81526004016102b690610888565b6001600160a01b03821661046d5760405162461bcd60e51b81526004016102b690610773565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906104c8908590610911565b60405180910390a3505050565b6001600160a01b0383166104fb5760405162461bcd60e51b81526004016102b690610843565b6001600160a01b0382166105215760405162461bcd60e51b81526004016102b690610730565b61052c8383836105ff565b6001600160a01b038316600090815260208190526040902054818110156105655760405162461bcd60e51b81526004016102b6906107b5565b6001600160a01b0380851660009081526020819052604080822085850390559185168152908120805484929061059c908490610928565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516105e69190610911565b60405180910390a36105f98484846105ff565b50505050565b505050565b80356001600160a01b038116811461035157600080fd5b60006020828403121561062c578081fd5b61063582610604565b9392505050565b6000806040838503121561064e578081fd5b61065783610604565b915061066560208401610604565b90509250929050565b600080600060608486031215610682578081fd5b61068b84610604565b925061069960208501610604565b9150604084013590509250925092565b600080604083850312156106bb578182fd5b6106c483610604565b946020939093013593505050565b901515815260200190565b6000602080835283518082850152825b81811015610709578581018301518582016040015282016106ed565b8181111561071a5783604083870101525b50601f01601f1916929092016040019392505050565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526022908201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604082015261737360f01b606082015260800190565b60208082526026908201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604082015265616c616e636560d01b606082015260800190565b60208082526028908201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616040820152676c6c6f77616e636560c01b606082015260800190565b60208082526025908201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604082015264647265737360d81b606082015260800190565b60208082526024908201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646040820152637265737360e01b606082015260800190565b60208082526025908201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604082015264207a65726f60d81b606082015260800190565b90815260200190565b60ff91909116815260200190565b6000821982111561094757634e487b7160e01b81526011600452602481fd5b500190565b60028104600182168061096057607f821691505b6020821081141561098157634e487b7160e01b600052602260045260246000fd5b5091905056fea2646970667358221220c695b6c7732e91c37542ed1862db780f927d7f106d7f07c10ed247631831aca464736f6c6343000800003360806040523480156200001157600080fd5b50604051620010ae380380620010ae8339810160408190526200003491620002c9565b8351849084906200004d90600390602085019062000178565b5080516200006390600490602084019062000178565b505050620000878183670de0b6b3a7640000620000819190620003b5565b62000091565b5050505062000440565b6001600160a01b038216620000c35760405162461bcd60e51b8152600401620000ba906200035a565b60405180910390fd5b620000d16000838362000173565b8060026000828254620000e591906200039a565b90915550506001600160a01b03821660009081526020819052604081208054839290620001149084906200039a565b90915550506040516001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906200015990859062000391565b60405180910390a36200016f6000838362000173565b5050565b505050565b8280546200018690620003d7565b90600052602060002090601f016020900481019282620001aa5760008555620001f5565b82601f10620001c557805160ff1916838001178555620001f5565b82800160010185558215620001f5579182015b82811115620001f5578251825591602001919060010190620001d8565b506200020392915062000207565b5090565b5b8082111562000203576000815560010162000208565b600082601f8301126200022f578081fd5b81516001600160401b03808211156200024c576200024c6200042a565b6040516020601f8401601f19168201810183811183821017156200027457620002746200042a565b60405283825285840181018710156200028b578485fd5b8492505b83831015620002ae57858301810151828401820152918201916200028f565b83831115620002bf57848185840101525b5095945050505050565b60008060008060808587031215620002df578384fd5b84516001600160401b0380821115620002f6578586fd5b62000304888389016200021e565b955060208701519150808211156200031a578485fd5b5062000329878288016200021e565b60408701516060880151919550935090506001600160a01b03811681146200034f578182fd5b939692955090935050565b6020808252601f908201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604082015260600190565b90815260200190565b60008219821115620003b057620003b062000414565b500190565b6000816000190483118215151615620003d257620003d262000414565b500290565b600281046001821680620003ec57607f821691505b602082108114156200040e57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b610c5e80620004506000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c806342966c681161008c57806395d89b411161006657806395d89b411461019d578063a457c2d7146101a5578063a9059cbb146101b8578063dd62ed3e146101cb576100cf565b806342966c681461016257806370a082311461017757806379cc67901461018a576100cf565b806306fdde03146100d4578063095ea7b3146100f257806318160ddd1461011257806323b872dd14610127578063313ce5671461013a578063395093511461014f575b600080fd5b6100dc6101de565b6040516100e99190610896565b60405180910390f35b61010561010036600461084a565b610270565b6040516100e9919061088b565b61011a61028d565b6040516100e99190610b91565b61010561013536600461080f565b610293565b61014261032c565b6040516100e99190610b9a565b61010561015d36600461084a565b610331565b610175610170366004610873565b610385565b005b61011a6101853660046107bc565b610399565b61017561019836600461084a565b6103b8565b6100dc61040b565b6101056101b336600461084a565b61041a565b6101056101c636600461084a565b610493565b61011a6101d93660046107dd565b6104a7565b6060600380546101ed90610bd7565b80601f016020809104026020016040519081016040528092919081815260200182805461021990610bd7565b80156102665780601f1061023b57610100808354040283529160200191610266565b820191906000526020600020905b81548152906001019060200180831161024957829003601f168201915b5050505050905090565b600061028461027d6104d2565b84846104d6565b50600192915050565b60025490565b60006102a084848461058a565b6001600160a01b0384166000908152600160205260408120816102c16104d2565b6001600160a01b03166001600160a01b031681526020019081526020016000205490508281101561030d5760405162461bcd60e51b8152600401610304906109f6565b60405180910390fd5b610321856103196104d2565b8584036104d6565b506001949350505050565b601290565b600061028461033e6104d2565b84846001600061034c6104d2565b6001600160a01b03908116825260208083019390935260409182016000908120918b16815292529020546103809190610ba8565b6104d6565b6103966103906104d2565b826106b4565b50565b6001600160a01b0381166000908152602081905260409020545b919050565b60006103c6836101d96104d2565b9050818110156103e85760405162461bcd60e51b815260040161030490610a3e565b6103fc836103f46104d2565b8484036104d6565b61040683836106b4565b505050565b6060600480546101ed90610bd7565b600080600160006104296104d2565b6001600160a01b03908116825260208083019390935260409182016000908120918816815292529020549050828110156104755760405162461bcd60e51b815260040161030490610b4c565b6104896104806104d2565b858584036104d6565b5060019392505050565b60006102846104a06104d2565b848461058a565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3390565b6001600160a01b0383166104fc5760405162461bcd60e51b815260040161030490610b08565b6001600160a01b0382166105225760405162461bcd60e51b81526004016103049061096e565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259061057d908590610b91565b60405180910390a3505050565b6001600160a01b0383166105b05760405162461bcd60e51b815260040161030490610ac3565b6001600160a01b0382166105d65760405162461bcd60e51b8152600401610304906108e9565b6105e1838383610406565b6001600160a01b0383166000908152602081905260409020548181101561061a5760405162461bcd60e51b8152600401610304906109b0565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610651908490610ba8565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161069b9190610b91565b60405180910390a36106ae848484610406565b50505050565b6001600160a01b0382166106da5760405162461bcd60e51b815260040161030490610a82565b6106e682600083610406565b6001600160a01b0382166000908152602081905260409020548181101561071f5760405162461bcd60e51b81526004016103049061092c565b6001600160a01b038316600090815260208190526040812083830390556002805484929061074e908490610bc0565b90915550506040516000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610791908690610b91565b60405180910390a361040683600084610406565b80356001600160a01b03811681146103b357600080fd5b6000602082840312156107cd578081fd5b6107d6826107a5565b9392505050565b600080604083850312156107ef578081fd5b6107f8836107a5565b9150610806602084016107a5565b90509250929050565b600080600060608486031215610823578081fd5b61082c846107a5565b925061083a602085016107a5565b9150604084013590509250925092565b6000806040838503121561085c578182fd5b610865836107a5565b946020939093013593505050565b600060208284031215610884578081fd5b5035919050565b901515815260200190565b6000602080835283518082850152825b818110156108c2578581018301518582016040015282016108a6565b818111156108d35783604083870101525b50601f01601f1916929092016040019392505050565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526022908201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604082015261636560f01b606082015260800190565b60208082526022908201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604082015261737360f01b606082015260800190565b60208082526026908201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604082015265616c616e636560d01b606082015260800190565b60208082526028908201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616040820152676c6c6f77616e636560c01b606082015260800190565b60208082526024908201527f45524332303a206275726e20616d6f756e74206578636565647320616c6c6f77604082015263616e636560e01b606082015260800190565b60208082526021908201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736040820152607360f81b606082015260800190565b60208082526025908201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604082015264647265737360d81b606082015260800190565b60208082526024908201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646040820152637265737360e01b606082015260800190565b60208082526025908201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604082015264207a65726f60d81b606082015260800190565b90815260200190565b60ff91909116815260200190565b60008219821115610bbb57610bbb610c12565b500190565b600082821015610bd257610bd2610c12565b500390565b600281046001821680610beb57607f821691505b60208210811415610c0c57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea2646970667358221220649d0aaa2cceb4b5731962b7d7c19b9506ca06b76d1bb99a39ce4b2ddfe4e84464736f6c63430008000033a26469706673582212207f580eb093e0b231ae7ed74750ef61384da2561c041690d4233d7025f957cc0d64736f6c63430008000033",
  "deployedBytecode": "",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:5198:12",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:12",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "69:658:12",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "118:24:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "array",
                              "nodeType": "YulIdentifier",
                              "src": "127:5:12"
                            },
                            {
                              "name": "array",
                              "nodeType": "YulIdentifier",
                              "src": "134:5:12"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "120:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "120:20:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "120:20:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "97:6:12"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "105:4:12",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "93:3:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "93:17:12"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "112:3:12"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "89:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "89:27:12"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "82:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "82:35:12"
                  },
                  "nodeType": "YulIf",
                  "src": "79:2:12"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "151:30:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "174:6:12"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "161:12:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "161:20:12"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "155:2:12",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "190:28:12",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "200:18:12",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "194:2:12",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "241:22:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "243:16:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "243:18:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "243:18:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "233:2:12"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "237:2:12"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "230:2:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "230:10:12"
                  },
                  "nodeType": "YulIf",
                  "src": "227:2:12"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "272:23:12",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "292:2:12",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "286:5:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "286:9:12"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "276:6:12",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "304:69:12",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "330:6:12"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "346:2:12"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "350:4:12",
                                    "type": "",
                                    "value": "0x1f"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "342:3:12"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "342:13:12"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "361:2:12",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "357:3:12"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "357:7:12"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "338:3:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "338:27:12"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "326:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "326:40:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "368:4:12",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "322:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "322:51:12"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "308:10:12",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "432:22:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "434:16:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "434:18:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "434:18:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "391:10:12"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "403:2:12"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "388:2:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "388:18:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "411:10:12"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "423:6:12"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "408:2:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "408:22:12"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "385:2:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "385:46:12"
                  },
                  "nodeType": "YulIf",
                  "src": "382:2:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "470:2:12",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "474:10:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "463:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "463:22:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "463:22:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "501:6:12"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "509:2:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "494:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "494:18:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "494:18:12"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "560:24:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "array",
                              "nodeType": "YulIdentifier",
                              "src": "569:5:12"
                            },
                            {
                              "name": "array",
                              "nodeType": "YulIdentifier",
                              "src": "576:5:12"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "562:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "562:20:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "562:20:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "535:6:12"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "543:2:12"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "531:3:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "531:15:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "548:4:12",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "527:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "527:26:12"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "555:3:12"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "524:2:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "524:35:12"
                  },
                  "nodeType": "YulIf",
                  "src": "521:2:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "610:6:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "618:4:12",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "606:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "606:17:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "629:6:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "637:4:12",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "625:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "625:17:12"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "644:2:12"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "593:12:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "593:54:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "593:54:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "671:6:12"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "679:2:12"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "667:3:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "667:15:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "684:4:12",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "663:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "663:26:12"
                      },
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "691:5:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "656:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "656:41:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "656:41:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "706:15:12",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "715:6:12"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "706:5:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_t_string",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "43:6:12",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "51:3:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "59:5:12",
                "type": ""
              }
            ],
            "src": "14:713:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "819:287:12",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "865:26:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "874:6:12"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "882:6:12"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "867:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "867:22:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "867:22:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "840:7:12"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "849:9:12"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "836:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "836:23:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "861:2:12",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "832:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "832:32:12"
                  },
                  "nodeType": "YulIf",
                  "src": "829:2:12"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "900:36:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "926:9:12"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "913:12:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "913:23:12"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "904:5:12",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "999:26:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1008:6:12"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1016:6:12"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1001:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1001:22:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1001:22:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "958:5:12"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "969:5:12"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "984:3:12",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "989:1:12",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "980:3:12"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "980:11:12"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "993:1:12",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "976:3:12"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "976:19:12"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "965:3:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "965:31:12"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "955:2:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "955:42:12"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "948:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "948:50:12"
                  },
                  "nodeType": "YulIf",
                  "src": "945:2:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1034:15:12",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1044:5:12"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1034:6:12"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1058:42:12",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1085:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1096:2:12",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1081:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1081:18:12"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1068:12:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1068:32:12"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1058:6:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "777:9:12",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "788:7:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "800:6:12",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "808:6:12",
                "type": ""
              }
            ],
            "src": "732:374:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1235:521:12",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1281:26:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "1290:6:12"
                            },
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "1298:6:12"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1283:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1283:22:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1283:22:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1256:7:12"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1265:9:12"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1252:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1252:23:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1277:2:12",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1248:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1248:32:12"
                  },
                  "nodeType": "YulIf",
                  "src": "1245:2:12"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1316:37:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1343:9:12"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1330:12:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1330:23:12"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "1320:6:12",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1362:28:12",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1372:18:12",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1366:2:12",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1417:26:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "1426:6:12"
                            },
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "1434:6:12"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1419:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1419:22:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1419:22:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1405:6:12"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1413:2:12"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1402:2:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1402:14:12"
                  },
                  "nodeType": "YulIf",
                  "src": "1399:2:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1452:62:12",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1486:9:12"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1497:6:12"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1482:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1482:22:12"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1506:7:12"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_string",
                      "nodeType": "YulIdentifier",
                      "src": "1462:19:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1462:52:12"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1452:6:12"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1523:48:12",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1556:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1567:2:12",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1552:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1552:18:12"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1539:12:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1539:32:12"
                  },
                  "variables": [
                    {
                      "name": "offset_1",
                      "nodeType": "YulTypedName",
                      "src": "1527:8:12",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1600:26:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "1609:6:12"
                            },
                            {
                              "name": "value2",
                              "nodeType": "YulIdentifier",
                              "src": "1617:6:12"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1602:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1602:22:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1602:22:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset_1",
                        "nodeType": "YulIdentifier",
                        "src": "1586:8:12"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1596:2:12"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1583:2:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1583:16:12"
                  },
                  "nodeType": "YulIf",
                  "src": "1580:2:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1635:64:12",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1669:9:12"
                          },
                          {
                            "name": "offset_1",
                            "nodeType": "YulIdentifier",
                            "src": "1680:8:12"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1665:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1665:24:12"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1691:7:12"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_t_string",
                      "nodeType": "YulIdentifier",
                      "src": "1645:19:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1645:54:12"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1635:6:12"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1708:42:12",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1735:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1746:2:12",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1731:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1731:18:12"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1718:12:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1718:32:12"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "1708:6:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1185:9:12",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1196:7:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1208:6:12",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1216:6:12",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1224:6:12",
                "type": ""
              }
            ],
            "src": "1111:645:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1831:120:12",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1877:26:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1886:6:12"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "1894:6:12"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1879:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1879:22:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1879:22:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1852:7:12"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1861:9:12"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1848:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1848:23:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1873:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1844:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1844:32:12"
                  },
                  "nodeType": "YulIf",
                  "src": "1841:2:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1912:33:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1935:9:12"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1922:12:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1922:23:12"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1912:6:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1797:9:12",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1808:7:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1820:6:12",
                "type": ""
              }
            ],
            "src": "1761:190:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2043:171:12",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2089:26:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2098:6:12"
                            },
                            {
                              "name": "value0",
                              "nodeType": "YulIdentifier",
                              "src": "2106:6:12"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2091:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2091:22:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2091:22:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2064:7:12"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2073:9:12"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2060:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2060:23:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2085:2:12",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2056:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2056:32:12"
                  },
                  "nodeType": "YulIf",
                  "src": "2053:2:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2124:33:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2147:9:12"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2134:12:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2134:23:12"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2124:6:12"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2166:42:12",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2193:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2204:2:12",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2189:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2189:18:12"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2176:12:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2176:32:12"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2166:6:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2001:9:12",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2012:7:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2024:6:12",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2032:6:12",
                "type": ""
              }
            ],
            "src": "1956:258:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2273:186:12",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2315:111:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2336:1:12",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2343:3:12",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2348:10:12",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "2339:3:12"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2339:20:12"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2329:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2329:31:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2329:31:12"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2380:1:12",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2383:4:12",
                              "type": "",
                              "value": "0x21"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2373:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2373:15:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2373:15:12"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2408:1:12",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2411:4:12",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2401:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2401:15:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2401:15:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2296:5:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2303:1:12",
                            "type": "",
                            "value": "4"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "2293:2:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2293:12:12"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2286:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2286:20:12"
                  },
                  "nodeType": "YulIf",
                  "src": "2283:2:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2442:3:12"
                      },
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2447:5:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2435:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2435:18:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2435:18:12"
                }
              ]
            },
            "name": "abi_encode_t_enum$_TokenType",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2257:5:12",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2264:3:12",
                "type": ""
              }
            ],
            "src": "2219:240:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2516:426:12",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2526:26:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2546:5:12"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2540:5:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2540:12:12"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "2530:6:12",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2568:3:12"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2573:6:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2561:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2561:19:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2561:19:12"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2589:12:12",
                  "value": {
                    "name": "end",
                    "nodeType": "YulIdentifier",
                    "src": "2598:3:12"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "2593:1:12",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2662:110:12",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "2676:14:12",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "2686:4:12",
                          "type": "",
                          "value": "0x20"
                        },
                        "variables": [
                          {
                            "name": "_1",
                            "nodeType": "YulTypedName",
                            "src": "2680:2:12",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "pos",
                                      "nodeType": "YulIdentifier",
                                      "src": "2718:3:12"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "2723:1:12"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "2714:3:12"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2714:11:12"
                                },
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "2727:2:12"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2710:3:12"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2710:20:12"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "value",
                                          "nodeType": "YulIdentifier",
                                          "src": "2746:5:12"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "2753:1:12"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "2742:3:12"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2742:13:12"
                                    },
                                    {
                                      "name": "_1",
                                      "nodeType": "YulIdentifier",
                                      "src": "2757:2:12"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "2738:3:12"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2738:22:12"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "2732:5:12"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2732:29:12"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2703:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2703:59:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2703:59:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "2621:1:12"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2624:6:12"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "2618:2:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2618:13:12"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "2632:21:12",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2634:17:12",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "2643:1:12"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2646:4:12",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "2639:3:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2639:12:12"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "2634:1:12"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "2614:3:12",
                    "statements": []
                  },
                  "src": "2610:162:12"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2806:64:12",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "pos",
                                      "nodeType": "YulIdentifier",
                                      "src": "2835:3:12"
                                    },
                                    {
                                      "name": "length",
                                      "nodeType": "YulIdentifier",
                                      "src": "2840:6:12"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "2831:3:12"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2831:16:12"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2849:4:12",
                                  "type": "",
                                  "value": "0x20"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2827:3:12"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2827:27:12"
                            },
                            {
                              "name": "end",
                              "nodeType": "YulIdentifier",
                              "src": "2856:3:12"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2820:6:12"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2820:40:12"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2820:40:12"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "2787:1:12"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2790:6:12"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2784:2:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2784:13:12"
                  },
                  "nodeType": "YulIf",
                  "src": "2781:2:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2879:57:12",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "2894:3:12"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "2907:6:12"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2915:2:12",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2903:3:12"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2903:15:12"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2924:2:12",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "2920:3:12"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2920:7:12"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "2899:3:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2899:29:12"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2890:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2890:39:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2931:4:12",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2886:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2886:50:12"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "2879:3:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_string",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2493:5:12",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2500:3:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2508:3:12",
                "type": ""
              }
            ],
            "src": "2464:478:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3100:167:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3110:26:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3122:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3133:2:12",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3118:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3118:18:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3110:4:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3174:6:12"
                      },
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3182:9:12"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_enum$_TokenType",
                      "nodeType": "YulIdentifier",
                      "src": "3145:28:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3145:47:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3145:47:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3212:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3223:2:12",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3208:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3208:18:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "3232:6:12"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3248:3:12",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3253:1:12",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "3244:3:12"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3244:11:12"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3257:1:12",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "3240:3:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3240:19:12"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3228:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3228:32:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3201:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3201:60:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3201:60:12"
                }
              ]
            },
            "name": "abi_encode_tuple_t_enum$_TokenType_$869_t_contract$_ERC20_$650__to_t_uint8_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3061:9:12",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3072:6:12",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3080:6:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3091:4:12",
                "type": ""
              }
            ],
            "src": "2947:320:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3497:332:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3514:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3525:3:12",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3507:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3507:22:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3507:22:12"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3538:62:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3572:6:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3584:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3595:3:12",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3580:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3580:19:12"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string",
                      "nodeType": "YulIdentifier",
                      "src": "3552:19:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3552:48:12"
                  },
                  "variables": [
                    {
                      "name": "tail_1",
                      "nodeType": "YulTypedName",
                      "src": "3542:6:12",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3620:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3631:2:12",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3616:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3616:18:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail_1",
                            "nodeType": "YulIdentifier",
                            "src": "3640:6:12"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3648:9:12"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3636:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3636:22:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3609:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3609:50:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3609:50:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3668:43:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "3696:6:12"
                      },
                      {
                        "name": "tail_1",
                        "nodeType": "YulIdentifier",
                        "src": "3704:6:12"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string",
                      "nodeType": "YulIdentifier",
                      "src": "3676:19:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3676:35:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3668:4:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3731:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3742:2:12",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3727:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3727:18:12"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "3747:6:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3720:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3720:34:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3720:34:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3774:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3785:2:12",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3770:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3770:18:12"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value3",
                            "nodeType": "YulIdentifier",
                            "src": "3794:6:12"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3810:3:12",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3815:1:12",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "3806:3:12"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3806:11:12"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3819:1:12",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "3802:3:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3802:19:12"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3790:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3790:32:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3763:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3763:60:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3763:60:12"
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address__to_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3442:9:12",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "3453:6:12",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "3461:6:12",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3469:6:12",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3477:6:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3488:4:12",
                "type": ""
              }
            ],
            "src": "3272:557:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4008:173:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4025:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4036:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4018:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4018:21:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4018:21:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4059:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4070:2:12",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4055:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4055:18:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4075:2:12",
                        "type": "",
                        "value": "23"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4048:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4048:30:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4048:30:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4098:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4109:2:12",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4094:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4094:18:12"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4114:25:12",
                        "type": "",
                        "value": "Caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4087:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4087:53:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4087:53:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4149:26:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4161:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4172:2:12",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4157:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4157:18:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4149:4:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_15ed5034391ed5ef65b8bb8dbcb08f9b6c4034ebcf89f76344a17e1651e92b33__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3985:9:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3999:4:12",
                "type": ""
              }
            ],
            "src": "3834:347:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4360:162:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4377:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4388:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4370:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4370:21:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4370:21:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4411:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4422:2:12",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4407:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4407:18:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4427:2:12",
                        "type": "",
                        "value": "12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4400:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4400:30:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4400:30:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4450:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4461:2:12",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4446:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4446:18:12"
                      },
                      {
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4466:14:12",
                        "type": "",
                        "value": "Fee required"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4439:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4439:42:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4439:42:12"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4490:26:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4502:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4513:2:12",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4498:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4498:18:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4490:4:12"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_de16f84f455abb230e1a373e94065ffb18b4a65a389f6a1da708211bb3fcf061__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4337:9:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4351:4:12",
                "type": ""
              }
            ],
            "src": "4186:336:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4688:194:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4698:26:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4710:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4721:2:12",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4706:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4706:18:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4698:4:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4768:6:12"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "4762:5:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4762:13:12"
                      },
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4777:9:12"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_enum$_TokenType",
                      "nodeType": "YulIdentifier",
                      "src": "4733:28:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4733:54:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4733:54:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4807:9:12"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4818:4:12",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4803:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4803:20:12"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "4839:6:12"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4847:4:12",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4835:3:12"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4835:17:12"
                              }
                            ],
                            "functionName": {
                              "name": "mload",
                              "nodeType": "YulIdentifier",
                              "src": "4829:5:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4829:24:12"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4863:3:12",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4868:1:12",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "4859:3:12"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4859:11:12"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4872:1:12",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "4855:3:12"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4855:19:12"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4825:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4825:50:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4796:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4796:80:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4796:80:12"
                }
              ]
            },
            "name": "abi_encode_tuple_t_struct$_LaunchedToken_$876_memory_ptr__to_t_struct$_LaunchedToken_$876_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4657:9:12",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4668:6:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4679:4:12",
                "type": ""
              }
            ],
            "src": "4527:355:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4988:76:12",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4998:26:12",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5010:9:12"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5021:2:12",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5006:3:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5006:18:12"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4998:4:12"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5040:9:12"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5051:6:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5033:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5033:25:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5033:25:12"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4957:9:12",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4968:6:12",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4979:4:12",
                "type": ""
              }
            ],
            "src": "4887:177:12"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5101:95:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5118:1:12",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5125:3:12",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5130:10:12",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "5121:3:12"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5121:20:12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5111:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5111:31:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5111:31:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5158:1:12",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5161:4:12",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5151:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5151:15:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5151:15:12"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5182:1:12",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5185:4:12",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "5175:6:12"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5175:15:12"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5175:15:12"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "5069:127:12"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_t_string(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(array, array) }\n        let _1 := calldataload(offset)\n        let _2 := 0xffffffffffffffff\n        if gt(_1, _2) { panic_error_0x41() }\n        let memPtr := mload(64)\n        let newFreePtr := add(add(memPtr, and(add(_1, 0x1f), not(31))), 0x20)\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(array, array) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), array)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(value0, value0) }\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value2, value2) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(value2, value2) }\n        value0 := abi_decode_t_string(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(value2, value2) }\n        value1 := abi_decode_t_string(add(headStart, offset_1), dataEnd)\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_t_enum$_TokenType(value, pos)\n    {\n        if iszero(lt(value, 4))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x21)\n            revert(0, 0x24)\n        }\n        mstore(pos, value)\n    }\n    function abi_encode_t_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := end\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(pos, length), 0x20), end)\n        }\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_enum$_TokenType_$869_t_contract$_ERC20_$650__to_t_uint8_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        abi_encode_t_enum$_TokenType(value0, headStart)\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address__to_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_address__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 128)\n        let tail_1 := abi_encode_t_string(value0, add(headStart, 128))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_t_string(value1, tail_1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), and(value3, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_15ed5034391ed5ef65b8bb8dbcb08f9b6c4034ebcf89f76344a17e1651e92b33__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_de16f84f455abb230e1a373e94065ffb18b4a65a389f6a1da708211bb3fcf061__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 12)\n        mstore(add(headStart, 64), \"Fee required\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_struct$_LaunchedToken_$876_memory_ptr__to_t_struct$_LaunchedToken_$876_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        abi_encode_t_enum$_TokenType(mload(value0), headStart)\n        mstore(add(headStart, 0x20), and(mload(add(value0, 0x20)), sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
      "id": 12,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "234:3353:6:-:0;;;267:59;;;-1:-1:-1;;;;;;267:59:6;284:42;267:59;;;361:17;267:59;335:43;413:17;385:45;;465:17;437:45;;525:17;489:53;;234:3353;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "234:3353:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;573:58;;;;;;;;;;-1:-1:-1;573:58:6;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;3466:116;;;;;;;;;;;;;:::i;:::-;;1514:399;;;;;;:::i;:::-;;:::i;2324:440::-;;;;;;:::i;:::-;;:::i;824:131::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;2894:564::-;;;;;;;;;;-1:-1:-1;2894:564:6;;;;;:::i;:::-;;:::i;1119:389::-;;;;;;:::i;:::-;;:::i;1919:399::-;;;;;;:::i;:::-;;:::i;961:150::-;;;;;;;;;;-1:-1:-1;961:150:6;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;573:58::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;573:58:6;;;-1:-1:-1;;;;;573:58:6;;-1:-1:-1;573:58:6;:::o;3466:116::-;2809:6;;-1:-1:-1;;;;;2809:6:6;2827:10;2809:29;2801:65;;;;-1:-1:-1;;;2801:65:6;;;;;;;:::i;:::-;;;;;;;;;3526:47:::1;::::0;3534:10:::1;::::0;3551:21:::1;3526:47:::0;::::1;;;::::0;::::1;::::0;;;3551:21;3534:10;3526:47;::::1;;;;;;3518:56;;;::::0;::::1;;3466:116::o:0;1514:399::-;1653:17;;1640:9;:30;;1632:55;;;;-1:-1:-1;;;1632:55:6;;;;;;;:::i;:::-;1698:29;1750:4;1756:6;1764:11;1785:10;1730:67;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1832:10:6;1808:36;;;;:15;:36;;;;;;;1850:54;;;;;;;;1698:99;;-1:-1:-1;1850:54:6;1864:24;1850:54;;;-1:-1:-1;;;;;1850:54:6;;;;;;;1808:97;;;;;;;;-1:-1:-1;1808:97:6;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1808:97:6;;;;;;;;;-1:-1:-1;;;1808:97:6;;;;;;;;;;;;;-1:-1:-1;1808:97:6;;;;;;;;-1:-1:-1;;;;;1808:97:6;;;;;-1:-1:-1;;;;;;1808:97:6;;;;;;-1:-1:-1;;;;1514:399:6:o;2324:440::-;2471:25;;2458:9;:38;;2450:63;;;;-1:-1:-1;;;2450:63:6;;;;;;;:::i;:::-;2524:37;2592:4;2598:6;2606:11;2627:10;2564:75;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2674:10:6;2650:36;;;;:15;:36;;;;;;;2692:63;;;;;;;;2524:115;;-1:-1:-1;2692:63:6;2706:33;2692:63;;824:131;928:10;881:4;904:36;;;:15;:36;;;;;:43;824:131;:::o;2894:564::-;2809:6;;-1:-1:-1;;;;;2809:6:6;2827:10;2809:29;2801:65;;;;-1:-1:-1;;;2801:65:6;;;;;;;:::i;:::-;2966:38;2963:488:::1;;3020:15;:23:::0;;;3058:7:::1;;2963:488;3099:24;3084:6;:40;3081:370;;;3140:17;:25:::0;;;3180:7:::1;;3081:370;3221:24;3206:6;:40;3203:248;;;3262:17;:25:::0;;;3302:7:::1;;3203:248;3343:33;3328:6;:49;3325:126;;;3393:17;:25:::0;;;3325:126:::1;2894:564:::0;;:::o;1119:389::-;1256:15;;1243:9;:28;;1235:53;;;;-1:-1:-1;;;1235:53:6;;;;;;;:::i;:::-;1299:27;1347:4;1353:6;1361:11;1382:10;1329:65;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1429:10:6;1405:36;;;;:15;:36;;;;;;1447:52;;;;;;;;1299:95;;-1:-1:-1;1447:52:6;;;;;1919:399;2058:17;;2045:9;:30;;2037:55;;;;-1:-1:-1;;;2037:55:6;;;;;;;:::i;:::-;2103:29;2155:4;2161:6;2169:11;2190:10;2135:67;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2237:10:6;2213:36;;;;:15;:36;;;;;;;2255:54;;;;;;;;2103:99;;-1:-1:-1;2255:54:6;2269:24;2255:54;;961:150;1021:20;;:::i;:::-;1084:10;1060:36;;;;:15;:36;;;;;:43;;1097:5;;1060:43;;;;-1:-1:-1;;;1060:43:6;;;;;;;;;;;;;;;;;1053:50;;;;;;;;;1060:43;;1053:50;;;;;;;;;;;;-1:-1:-1;;;1053:50:6;;;;;;;;;;;;;;;-1:-1:-1;;;1053:50:6;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1053:50:6;;;;;;;961:150;-1:-1:-1;;961:150:6:o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;14:713:12:-;;112:3;105:4;97:6;93:17;89:27;79:2;;134:5;127;120:20;79:2;174:6;161:20;200:18;237:2;233;230:10;227:2;;;243:18;;:::i;:::-;292:2;286:9;361:2;342:13;;-1:-1:-1;;338:27:12;326:40;;368:4;322:51;388:18;;;408:22;;;385:46;382:2;;;434:18;;:::i;:::-;470:2;463:22;494:18;;;531:15;;;548:4;527:26;524:35;-1:-1:-1;521:2:12;;;576:5;569;562:20;521:2;644;637:4;629:6;625:17;618:4;610:6;606:17;593:54;667:15;;;684:4;663:26;656:41;;;;671:6;69:658;-1:-1:-1;;;69:658:12:o;732:374::-;;;861:2;849:9;840:7;836:23;832:32;829:2;;;882:6;874;867:22;829:2;913:23;;-1:-1:-1;;;;;965:31:12;;955:42;;945:2;;1016:6;1008;1001:22;945:2;1044:5;1096:2;1081:18;;;;1068:32;;-1:-1:-1;;;819:287:12:o;1111:645::-;;;;1277:2;1265:9;1256:7;1252:23;1248:32;1245:2;;;1298:6;1290;1283:22;1245:2;1343:9;1330:23;1372:18;1413:2;1405:6;1402:14;1399:2;;;1434:6;1426;1419:22;1399:2;1462:52;1506:7;1497:6;1486:9;1482:22;1462:52;:::i;:::-;1452:62;;1567:2;1556:9;1552:18;1539:32;1523:48;;1596:2;1586:8;1583:16;1580:2;;;1617:6;1609;1602:22;1580:2;;1645:54;1691:7;1680:8;1669:9;1665:24;1645:54;:::i;:::-;1635:64;;;1746:2;1735:9;1731:18;1718:32;1708:42;;1235:521;;;;;:::o;1761:190::-;;1873:2;1861:9;1852:7;1848:23;1844:32;1841:2;;;1894:6;1886;1879:22;1841:2;-1:-1:-1;1922:23:12;;1831:120;-1:-1:-1;1831:120:12:o;1956:258::-;;;2085:2;2073:9;2064:7;2060:23;2056:32;2053:2;;;2106:6;2098;2091:22;2053:2;-1:-1:-1;;2134:23:12;;;2204:2;2189:18;;;2176:32;;-1:-1:-1;2043:171:12:o;2219:240::-;2303:1;2296:5;2293:12;2283:2;;2348:10;2343:3;2339:20;2336:1;2329:31;2383:4;2380:1;2373:15;2411:4;2408:1;2401:15;2283:2;2435:18;;2273:186::o;2464:478::-;;2546:5;2540:12;2573:6;2568:3;2561:19;2598:3;2610:162;2624:6;2621:1;2618:13;2610:162;;;2686:4;2742:13;;;2738:22;;2732:29;2714:11;;;2710:20;;2703:59;2639:12;2610:162;;;2790:6;2787:1;2784:13;2781:2;;;2856:3;2849:4;2840:6;2835:3;2831:16;2827:27;2820:40;2781:2;-1:-1:-1;2924:2:12;2903:15;-1:-1:-1;;2899:29:12;2890:39;;;;2931:4;2886:50;;2516:426;-1:-1:-1;;2516:426:12:o;2947:320::-;3133:2;3118:18;;3145:47;3122:9;3174:6;3145:47;:::i;:::-;-1:-1:-1;;;;;3228:32:12;;;;3223:2;3208:18;;;;3201:60;3100:167;;-1:-1:-1;3100:167:12:o;3272:557::-;;3525:3;3514:9;3507:22;3552:48;3595:3;3584:9;3580:19;3572:6;3552:48;:::i;:::-;3648:9;3640:6;3636:22;3631:2;3620:9;3616:18;3609:50;3676:35;3704:6;3696;3676:35;:::i;:::-;3742:2;3727:18;;3720:34;;;;-1:-1:-1;;;;;;;3790:32:12;;;;3785:2;3770:18;;;3763:60;3668:43;3497:332;-1:-1:-1;;3497:332:12:o;3834:347::-;4036:2;4018:21;;;4075:2;4055:18;;;4048:30;4114:25;4109:2;4094:18;;4087:53;4172:2;4157:18;;4008:173::o;4186:336::-;4388:2;4370:21;;;4427:2;4407:18;;;4400:30;-1:-1:-1;;;4461:2:12;4446:18;;4439:42;4513:2;4498:18;;4360:162::o;4527:355::-;;4721:2;4710:9;4706:18;4698:26;;4733:54;4777:9;4768:6;4762:13;4733:54;:::i;:::-;4847:4;4835:17;;;4829:24;-1:-1:-1;;;;;4825:50:12;4803:20;;;;4796:80;4688:194;:::o;4887:177::-;5033:25;;;5021:2;5006:18;;4988:76::o;5069:127::-;5130:10;5125:3;5121:20;5118:1;5111:31;5161:4;5158:1;5151:15;5185:4;5182:1;5175:15",
  "source": "//SPDX-License-Identifier: UNLICENSED\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./tokens/CLTokenSimple.sol\";\r\nimport \"./tokens/CLMintableToken.sol\";\r\nimport \"./tokens/CLBurnableToken.sol\";\r\nimport \"./tokens/CLMintableBurnableToken.sol\";\r\n\r\ncontract CryptoLauncher {\r\n\r\n    address _owner = 0x5B38Da6a701c568545dCfcB03FcB875f56beddC4;\r\n\r\n    uint256 _simpleTokenFee = 20000000000000000;\r\n    uint256 _mintableTokenFee = 25000000000000000;\r\n    uint256 _burnableTokenFee = 30000000000000000;\r\n    uint256 _mintableBurnableTokenFee = 40000000000000000;\r\n\r\n    //Owner => Token\r\n    mapping(address => LaunchedToken[]) public _launchedTokens;\r\n\r\n    enum TokenType{ SIMPLE_TOKEN, MINTABLE_TOKEN, BURNABLE_TOKEN, MINTABLE_BURNABLE_TOKEN }\r\n\r\n    struct LaunchedToken {\r\n        TokenType tokenType;\r\n        ERC20 token;\r\n    }\r\n\r\n    function getMyLaunchedTokensLength() public view returns(uint){\r\n        return _launchedTokens[address(msg.sender)].length;\r\n    }\r\n    function getMyLaunchedToken(uint index) public view returns(LaunchedToken memory){\r\n        return _launchedTokens[address(msg.sender)][index];\r\n    }\r\n\r\n    function launchSimpleToken(string memory name, string memory symbol, uint256 totalSupply) public payable {\r\n        require(msg.value >= _simpleTokenFee, \"Fee required\");\r\n        CLTokenSimple launchedToken = new CLTokenSimple(name, symbol, totalSupply, address(msg.sender));\r\n        _launchedTokens[address(msg.sender)].push(LaunchedToken(TokenType.SIMPLE_TOKEN, launchedToken));\r\n    }\r\n    function launchMintableToken(string memory name, string memory symbol, uint256 totalSupply) public payable {\r\n        require(msg.value >= _mintableTokenFee, \"Fee required\");\r\n        CLMintableToken launchedToken = new CLMintableToken(name, symbol, totalSupply, address(msg.sender));\r\n        _launchedTokens[address(msg.sender)].push(LaunchedToken(TokenType.MINTABLE_TOKEN, launchedToken));\r\n    }\r\n    function launchBurnableToken(string memory name, string memory symbol, uint256 totalSupply) public payable {\r\n        require(msg.value >= _burnableTokenFee, \"Fee required\");\r\n        CLBurnableToken launchedToken = new CLBurnableToken(name, symbol, totalSupply, address(msg.sender));\r\n        _launchedTokens[address(msg.sender)].push(LaunchedToken(TokenType.BURNABLE_TOKEN, launchedToken));\r\n    }\r\n    function launchMintableBurnableToken(string memory name, string memory symbol, uint256 totalSupply) public payable {\r\n        require(msg.value >= _mintableBurnableTokenFee, \"Fee required\");\r\n        CLMintableBurnableToken launchedToken = new CLMintableBurnableToken(name, symbol, totalSupply, address(msg.sender));\r\n        _launchedTokens[address(msg.sender)].push(LaunchedToken(TokenType.MINTABLE_BURNABLE_TOKEN, launchedToken));\r\n    }\r\n\r\n    modifier onlyCL() {\r\n        require(_owner == address(msg.sender), \"Caller is not the owner\");\r\n        _;\r\n    }\r\n\r\n    function setFee(uint action, uint256 value) onlyCL public {\r\n        if(action == uint(TokenType.SIMPLE_TOKEN)){\r\n            _simpleTokenFee = value;\r\n            return;\r\n        }else if(action == uint(TokenType.MINTABLE_TOKEN)){\r\n            _mintableTokenFee = value;\r\n            return;\r\n        }else if(action == uint(TokenType.BURNABLE_TOKEN)){\r\n            _burnableTokenFee = value;\r\n            return;\r\n        }else if(action == uint(TokenType.MINTABLE_BURNABLE_TOKEN)){\r\n            _mintableTokenFee = value;\r\n            return;\r\n        }\r\n    }\r\n\r\n    function withdrawFunds() onlyCL external {\r\n        require(payable(msg.sender).send(address(this).balance));\r\n    }\r\n\r\n}",
  "sourcePath": "D:\\Projetos\\cryptolauncher\\contracts\\CryptoLauncher.sol",
  "ast": {
    "absolutePath": "project:/contracts/CryptoLauncher.sol",
    "exportedSymbols": {
      "CLBurnableToken": [
        1276
      ],
      "CLMintableBurnableToken": [
        1332
      ],
      "CLMintableToken": [
        1385
      ],
      "CLTokenSimple": [
        1417
      ],
      "Context": [
        837
      ],
      "CryptoLauncher": [
        1209
      ],
      "ERC20": [
        650
      ],
      "ERC20Burnable": [
        790
      ],
      "IERC20": [
        728
      ],
      "IERC20Metadata": [
        815
      ],
      "Ownable": [
        104
      ]
    },
    "id": 1210,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 839,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:23:6"
      },
      {
        "absolutePath": "project:/contracts/tokens/CLTokenSimple.sol",
        "file": "./tokens/CLTokenSimple.sol",
        "id": 840,
        "nodeType": "ImportDirective",
        "scope": 1210,
        "sourceUnit": 1418,
        "src": "66:36:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/tokens/CLMintableToken.sol",
        "file": "./tokens/CLMintableToken.sol",
        "id": 841,
        "nodeType": "ImportDirective",
        "scope": 1210,
        "sourceUnit": 1386,
        "src": "104:38:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/tokens/CLBurnableToken.sol",
        "file": "./tokens/CLBurnableToken.sol",
        "id": 842,
        "nodeType": "ImportDirective",
        "scope": 1210,
        "sourceUnit": 1277,
        "src": "144:38:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/tokens/CLMintableBurnableToken.sol",
        "file": "./tokens/CLMintableBurnableToken.sol",
        "id": 843,
        "nodeType": "ImportDirective",
        "scope": 1210,
        "sourceUnit": 1333,
        "src": "184:46:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [
          1276,
          1332,
          1385,
          1417
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1209,
        "linearizedBaseContracts": [
          1209
        ],
        "name": "CryptoLauncher",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 846,
            "mutability": "mutable",
            "name": "_owner",
            "nodeType": "VariableDeclaration",
            "scope": 1209,
            "src": "267:59:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 844,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "267:7:6",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307835423338446136613730316335363835343564436663423033466342383735663536626564644334",
              "id": 845,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "284:42:6",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x5B38Da6a701c568545dCfcB03FcB875f56beddC4"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 849,
            "mutability": "mutable",
            "name": "_simpleTokenFee",
            "nodeType": "VariableDeclaration",
            "scope": 1209,
            "src": "335:43:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 847,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "335:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3230303030303030303030303030303030",
              "id": 848,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "361:17:6",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_20000000000000000_by_1",
                "typeString": "int_const 20000000000000000"
              },
              "value": "20000000000000000"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 852,
            "mutability": "mutable",
            "name": "_mintableTokenFee",
            "nodeType": "VariableDeclaration",
            "scope": 1209,
            "src": "385:45:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 850,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "385:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3235303030303030303030303030303030",
              "id": 851,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "413:17:6",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_25000000000000000_by_1",
                "typeString": "int_const 25000000000000000"
              },
              "value": "25000000000000000"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 855,
            "mutability": "mutable",
            "name": "_burnableTokenFee",
            "nodeType": "VariableDeclaration",
            "scope": 1209,
            "src": "437:45:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 853,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "437:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3330303030303030303030303030303030",
              "id": 854,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "465:17:6",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_30000000000000000_by_1",
                "typeString": "int_const 30000000000000000"
              },
              "value": "30000000000000000"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 858,
            "mutability": "mutable",
            "name": "_mintableBurnableTokenFee",
            "nodeType": "VariableDeclaration",
            "scope": 1209,
            "src": "489:53:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 856,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "489:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3430303030303030303030303030303030",
              "id": 857,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "525:17:6",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_40000000000000000_by_1",
                "typeString": "int_const 40000000000000000"
              },
              "value": "40000000000000000"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "160c37ab",
            "id": 864,
            "mutability": "mutable",
            "name": "_launchedTokens",
            "nodeType": "VariableDeclaration",
            "scope": 1209,
            "src": "573:58:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_LaunchedToken_$876_storage_$dyn_storage_$",
              "typeString": "mapping(address => struct CryptoLauncher.LaunchedToken[])"
            },
            "typeName": {
              "id": 863,
              "keyType": {
                "id": 859,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "581:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "573:35:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_LaunchedToken_$876_storage_$dyn_storage_$",
                "typeString": "mapping(address => struct CryptoLauncher.LaunchedToken[])"
              },
              "valueType": {
                "baseType": {
                  "id": 861,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 860,
                    "name": "LaunchedToken",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 876,
                    "src": "592:13:6"
                  },
                  "referencedDeclaration": 876,
                  "src": "592:13:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_LaunchedToken_$876_storage_ptr",
                    "typeString": "struct CryptoLauncher.LaunchedToken"
                  }
                },
                "id": 862,
                "nodeType": "ArrayTypeName",
                "src": "592:15:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_LaunchedToken_$876_storage_$dyn_storage_ptr",
                  "typeString": "struct CryptoLauncher.LaunchedToken[]"
                }
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "CryptoLauncher.TokenType",
            "id": 869,
            "members": [
              {
                "id": 865,
                "name": "SIMPLE_TOKEN",
                "nodeType": "EnumValue",
                "src": "656:12:6"
              },
              {
                "id": 866,
                "name": "MINTABLE_TOKEN",
                "nodeType": "EnumValue",
                "src": "670:14:6"
              },
              {
                "id": 867,
                "name": "BURNABLE_TOKEN",
                "nodeType": "EnumValue",
                "src": "686:14:6"
              },
              {
                "id": 868,
                "name": "MINTABLE_BURNABLE_TOKEN",
                "nodeType": "EnumValue",
                "src": "702:23:6"
              }
            ],
            "name": "TokenType",
            "nodeType": "EnumDefinition",
            "src": "640:87:6"
          },
          {
            "canonicalName": "CryptoLauncher.LaunchedToken",
            "id": 876,
            "members": [
              {
                "constant": false,
                "id": 872,
                "mutability": "mutable",
                "name": "tokenType",
                "nodeType": "VariableDeclaration",
                "scope": 876,
                "src": "767:19:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_TokenType_$869",
                  "typeString": "enum CryptoLauncher.TokenType"
                },
                "typeName": {
                  "id": 871,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 870,
                    "name": "TokenType",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 869,
                    "src": "767:9:6"
                  },
                  "referencedDeclaration": 869,
                  "src": "767:9:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_TokenType_$869",
                    "typeString": "enum CryptoLauncher.TokenType"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 875,
                "mutability": "mutable",
                "name": "token",
                "nodeType": "VariableDeclaration",
                "scope": 876,
                "src": "797:11:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_ERC20_$650",
                  "typeString": "contract ERC20"
                },
                "typeName": {
                  "id": 874,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 873,
                    "name": "ERC20",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 650,
                    "src": "797:5:6"
                  },
                  "referencedDeclaration": 650,
                  "src": "797:5:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$650",
                    "typeString": "contract ERC20"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "LaunchedToken",
            "nodeType": "StructDefinition",
            "scope": 1209,
            "src": "735:81:6",
            "visibility": "public"
          },
          {
            "body": {
              "id": 890,
              "nodeType": "Block",
              "src": "886:69:6",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 881,
                        "name": "_launchedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 864,
                        "src": "904:15:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_LaunchedToken_$876_storage_$dyn_storage_$",
                          "typeString": "mapping(address => struct CryptoLauncher.LaunchedToken storage ref[] storage ref)"
                        }
                      },
                      "id": 887,
                      "indexExpression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 884,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "928:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 885,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "928:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 883,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "920:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 882,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "920:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 886,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "920:19:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "904:36:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_LaunchedToken_$876_storage_$dyn_storage",
                        "typeString": "struct CryptoLauncher.LaunchedToken storage ref[] storage ref"
                      }
                    },
                    "id": 888,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "904:43:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 880,
                  "id": 889,
                  "nodeType": "Return",
                  "src": "897:50:6"
                }
              ]
            },
            "functionSelector": "4f24b34b",
            "id": 891,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMyLaunchedTokensLength",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 877,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "858:2:6"
            },
            "returnParameters": {
              "id": 880,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 879,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 891,
                  "src": "881:4:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 878,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "881:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "880:6:6"
            },
            "scope": 1209,
            "src": "824:131:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 909,
              "nodeType": "Block",
              "src": "1042:69:6",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 899,
                        "name": "_launchedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 864,
                        "src": "1060:15:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_LaunchedToken_$876_storage_$dyn_storage_$",
                          "typeString": "mapping(address => struct CryptoLauncher.LaunchedToken storage ref[] storage ref)"
                        }
                      },
                      "id": 905,
                      "indexExpression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 902,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1084:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 903,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1084:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 901,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1076:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 900,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1076:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 904,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1076:19:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1060:36:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_LaunchedToken_$876_storage_$dyn_storage",
                        "typeString": "struct CryptoLauncher.LaunchedToken storage ref[] storage ref"
                      }
                    },
                    "id": 907,
                    "indexExpression": {
                      "id": 906,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 893,
                      "src": "1097:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1060:43:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LaunchedToken_$876_storage",
                      "typeString": "struct CryptoLauncher.LaunchedToken storage ref"
                    }
                  },
                  "functionReturnParameters": 898,
                  "id": 908,
                  "nodeType": "Return",
                  "src": "1053:50:6"
                }
              ]
            },
            "functionSelector": "aee2a82e",
            "id": 910,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMyLaunchedToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 894,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 893,
                  "mutability": "mutable",
                  "name": "index",
                  "nodeType": "VariableDeclaration",
                  "scope": 910,
                  "src": "989:10:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 892,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "989:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "988:12:6"
            },
            "returnParameters": {
              "id": 898,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 897,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 910,
                  "src": "1021:20:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_LaunchedToken_$876_memory_ptr",
                    "typeString": "struct CryptoLauncher.LaunchedToken"
                  },
                  "typeName": {
                    "id": 896,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 895,
                      "name": "LaunchedToken",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 876,
                      "src": "1021:13:6"
                    },
                    "referencedDeclaration": 876,
                    "src": "1021:13:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LaunchedToken_$876_storage_ptr",
                      "typeString": "struct CryptoLauncher.LaunchedToken"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1020:22:6"
            },
            "scope": 1209,
            "src": "961:150:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 958,
              "nodeType": "Block",
              "src": "1224:284:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 923,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 920,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1243:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 921,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "1243:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 922,
                          "name": "_simpleTokenFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 849,
                          "src": "1256:15:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1243:28:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "466565207265717569726564",
                        "id": 924,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1273:14:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_de16f84f455abb230e1a373e94065ffb18b4a65a389f6a1da708211bb3fcf061",
                          "typeString": "literal_string \"Fee required\""
                        },
                        "value": "Fee required"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_de16f84f455abb230e1a373e94065ffb18b4a65a389f6a1da708211bb3fcf061",
                          "typeString": "literal_string \"Fee required\""
                        }
                      ],
                      "id": 919,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1235:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 925,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1235:53:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 926,
                  "nodeType": "ExpressionStatement",
                  "src": "1235:53:6"
                },
                {
                  "assignments": [
                    929
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 929,
                      "mutability": "mutable",
                      "name": "launchedToken",
                      "nodeType": "VariableDeclaration",
                      "scope": 958,
                      "src": "1299:27:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CLTokenSimple_$1417",
                        "typeString": "contract CLTokenSimple"
                      },
                      "typeName": {
                        "id": 928,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 927,
                          "name": "CLTokenSimple",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1417,
                          "src": "1299:13:6"
                        },
                        "referencedDeclaration": 1417,
                        "src": "1299:13:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CLTokenSimple_$1417",
                          "typeString": "contract CLTokenSimple"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 942,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 933,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 912,
                        "src": "1347:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 934,
                        "name": "symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 914,
                        "src": "1353:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 935,
                        "name": "totalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 916,
                        "src": "1361:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 938,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1382:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 939,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1382:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 937,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1374:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 936,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1374:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 940,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1374:19:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 932,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1329:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$returns$_t_contract$_CLTokenSimple_$1417_$",
                        "typeString": "function (string memory,string memory,uint256,address) returns (contract CLTokenSimple)"
                      },
                      "typeName": {
                        "id": 931,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 930,
                          "name": "CLTokenSimple",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1417,
                          "src": "1333:13:6"
                        },
                        "referencedDeclaration": 1417,
                        "src": "1333:13:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CLTokenSimple_$1417",
                          "typeString": "contract CLTokenSimple"
                        }
                      }
                    },
                    "id": 941,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1329:65:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CLTokenSimple_$1417",
                      "typeString": "contract CLTokenSimple"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1299:95:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 952,
                              "name": "TokenType",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 869,
                              "src": "1461:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_TokenType_$869_$",
                                "typeString": "type(enum CryptoLauncher.TokenType)"
                              }
                            },
                            "id": 953,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "SIMPLE_TOKEN",
                            "nodeType": "MemberAccess",
                            "src": "1461:22:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_TokenType_$869",
                              "typeString": "enum CryptoLauncher.TokenType"
                            }
                          },
                          {
                            "id": 954,
                            "name": "launchedToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 929,
                            "src": "1485:13:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CLTokenSimple_$1417",
                              "typeString": "contract CLTokenSimple"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_TokenType_$869",
                              "typeString": "enum CryptoLauncher.TokenType"
                            },
                            {
                              "typeIdentifier": "t_contract$_CLTokenSimple_$1417",
                              "typeString": "contract CLTokenSimple"
                            }
                          ],
                          "id": 951,
                          "name": "LaunchedToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 876,
                          "src": "1447:13:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_LaunchedToken_$876_storage_ptr_$",
                            "typeString": "type(struct CryptoLauncher.LaunchedToken storage pointer)"
                          }
                        },
                        "id": 955,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1447:52:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LaunchedToken_$876_memory_ptr",
                          "typeString": "struct CryptoLauncher.LaunchedToken memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_LaunchedToken_$876_memory_ptr",
                          "typeString": "struct CryptoLauncher.LaunchedToken memory"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 943,
                          "name": "_launchedTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 864,
                          "src": "1405:15:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_LaunchedToken_$876_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct CryptoLauncher.LaunchedToken storage ref[] storage ref)"
                          }
                        },
                        "id": 949,
                        "indexExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 946,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1429:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 947,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1429:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 945,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1421:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 944,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1421:7:6",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 948,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1421:19:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1405:36:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_LaunchedToken_$876_storage_$dyn_storage",
                          "typeString": "struct CryptoLauncher.LaunchedToken storage ref[] storage ref"
                        }
                      },
                      "id": 950,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1405:41:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_LaunchedToken_$876_storage_$returns$__$",
                        "typeString": "function (struct CryptoLauncher.LaunchedToken storage ref)"
                      }
                    },
                    "id": 956,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1405:95:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 957,
                  "nodeType": "ExpressionStatement",
                  "src": "1405:95:6"
                }
              ]
            },
            "functionSelector": "5ba6f265",
            "id": 959,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "launchSimpleToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 917,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 912,
                  "mutability": "mutable",
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 959,
                  "src": "1146:18:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 911,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1146:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 914,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 959,
                  "src": "1166:20:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 913,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1166:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 916,
                  "mutability": "mutable",
                  "name": "totalSupply",
                  "nodeType": "VariableDeclaration",
                  "scope": 959,
                  "src": "1188:19:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 915,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1188:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1145:63:6"
            },
            "returnParameters": {
              "id": 918,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1224:0:6"
            },
            "scope": 1209,
            "src": "1119:389:6",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1007,
              "nodeType": "Block",
              "src": "1621:292:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 972,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 969,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1640:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 970,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "1640:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 971,
                          "name": "_mintableTokenFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 852,
                          "src": "1653:17:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1640:30:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "466565207265717569726564",
                        "id": 973,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1672:14:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_de16f84f455abb230e1a373e94065ffb18b4a65a389f6a1da708211bb3fcf061",
                          "typeString": "literal_string \"Fee required\""
                        },
                        "value": "Fee required"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_de16f84f455abb230e1a373e94065ffb18b4a65a389f6a1da708211bb3fcf061",
                          "typeString": "literal_string \"Fee required\""
                        }
                      ],
                      "id": 968,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1632:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 974,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1632:55:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 975,
                  "nodeType": "ExpressionStatement",
                  "src": "1632:55:6"
                },
                {
                  "assignments": [
                    978
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 978,
                      "mutability": "mutable",
                      "name": "launchedToken",
                      "nodeType": "VariableDeclaration",
                      "scope": 1007,
                      "src": "1698:29:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CLMintableToken_$1385",
                        "typeString": "contract CLMintableToken"
                      },
                      "typeName": {
                        "id": 977,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 976,
                          "name": "CLMintableToken",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1385,
                          "src": "1698:15:6"
                        },
                        "referencedDeclaration": 1385,
                        "src": "1698:15:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CLMintableToken_$1385",
                          "typeString": "contract CLMintableToken"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 991,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 982,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 961,
                        "src": "1750:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 983,
                        "name": "symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 963,
                        "src": "1756:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 984,
                        "name": "totalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 965,
                        "src": "1764:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 987,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1785:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 988,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1785:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 986,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1777:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 985,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1777:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 989,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1777:19:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 981,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1730:19:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$returns$_t_contract$_CLMintableToken_$1385_$",
                        "typeString": "function (string memory,string memory,uint256,address) returns (contract CLMintableToken)"
                      },
                      "typeName": {
                        "id": 980,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 979,
                          "name": "CLMintableToken",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1385,
                          "src": "1734:15:6"
                        },
                        "referencedDeclaration": 1385,
                        "src": "1734:15:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CLMintableToken_$1385",
                          "typeString": "contract CLMintableToken"
                        }
                      }
                    },
                    "id": 990,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1730:67:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CLMintableToken_$1385",
                      "typeString": "contract CLMintableToken"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1698:99:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 1001,
                              "name": "TokenType",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 869,
                              "src": "1864:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_TokenType_$869_$",
                                "typeString": "type(enum CryptoLauncher.TokenType)"
                              }
                            },
                            "id": 1002,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "MINTABLE_TOKEN",
                            "nodeType": "MemberAccess",
                            "src": "1864:24:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_TokenType_$869",
                              "typeString": "enum CryptoLauncher.TokenType"
                            }
                          },
                          {
                            "id": 1003,
                            "name": "launchedToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 978,
                            "src": "1890:13:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CLMintableToken_$1385",
                              "typeString": "contract CLMintableToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_TokenType_$869",
                              "typeString": "enum CryptoLauncher.TokenType"
                            },
                            {
                              "typeIdentifier": "t_contract$_CLMintableToken_$1385",
                              "typeString": "contract CLMintableToken"
                            }
                          ],
                          "id": 1000,
                          "name": "LaunchedToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 876,
                          "src": "1850:13:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_LaunchedToken_$876_storage_ptr_$",
                            "typeString": "type(struct CryptoLauncher.LaunchedToken storage pointer)"
                          }
                        },
                        "id": 1004,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1850:54:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LaunchedToken_$876_memory_ptr",
                          "typeString": "struct CryptoLauncher.LaunchedToken memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_LaunchedToken_$876_memory_ptr",
                          "typeString": "struct CryptoLauncher.LaunchedToken memory"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 992,
                          "name": "_launchedTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 864,
                          "src": "1808:15:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_LaunchedToken_$876_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct CryptoLauncher.LaunchedToken storage ref[] storage ref)"
                          }
                        },
                        "id": 998,
                        "indexExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 995,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1832:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 996,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1832:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 994,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1824:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 993,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1824:7:6",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 997,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1824:19:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1808:36:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_LaunchedToken_$876_storage_$dyn_storage",
                          "typeString": "struct CryptoLauncher.LaunchedToken storage ref[] storage ref"
                        }
                      },
                      "id": 999,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1808:41:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_LaunchedToken_$876_storage_$returns$__$",
                        "typeString": "function (struct CryptoLauncher.LaunchedToken storage ref)"
                      }
                    },
                    "id": 1005,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1808:97:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1006,
                  "nodeType": "ExpressionStatement",
                  "src": "1808:97:6"
                }
              ]
            },
            "functionSelector": "430dc3c8",
            "id": 1008,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "launchMintableToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 966,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 961,
                  "mutability": "mutable",
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 1008,
                  "src": "1543:18:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 960,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1543:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 963,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 1008,
                  "src": "1563:20:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 962,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1563:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 965,
                  "mutability": "mutable",
                  "name": "totalSupply",
                  "nodeType": "VariableDeclaration",
                  "scope": 1008,
                  "src": "1585:19:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 964,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1585:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1542:63:6"
            },
            "returnParameters": {
              "id": 967,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1621:0:6"
            },
            "scope": 1209,
            "src": "1514:399:6",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1056,
              "nodeType": "Block",
              "src": "2026:292:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1021,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1018,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2045:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1019,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "2045:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1020,
                          "name": "_burnableTokenFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 855,
                          "src": "2058:17:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2045:30:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "466565207265717569726564",
                        "id": 1022,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2077:14:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_de16f84f455abb230e1a373e94065ffb18b4a65a389f6a1da708211bb3fcf061",
                          "typeString": "literal_string \"Fee required\""
                        },
                        "value": "Fee required"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_de16f84f455abb230e1a373e94065ffb18b4a65a389f6a1da708211bb3fcf061",
                          "typeString": "literal_string \"Fee required\""
                        }
                      ],
                      "id": 1017,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2037:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1023,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2037:55:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1024,
                  "nodeType": "ExpressionStatement",
                  "src": "2037:55:6"
                },
                {
                  "assignments": [
                    1027
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1027,
                      "mutability": "mutable",
                      "name": "launchedToken",
                      "nodeType": "VariableDeclaration",
                      "scope": 1056,
                      "src": "2103:29:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CLBurnableToken_$1276",
                        "typeString": "contract CLBurnableToken"
                      },
                      "typeName": {
                        "id": 1026,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1025,
                          "name": "CLBurnableToken",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1276,
                          "src": "2103:15:6"
                        },
                        "referencedDeclaration": 1276,
                        "src": "2103:15:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CLBurnableToken_$1276",
                          "typeString": "contract CLBurnableToken"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1040,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1031,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1010,
                        "src": "2155:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 1032,
                        "name": "symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1012,
                        "src": "2161:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 1033,
                        "name": "totalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1014,
                        "src": "2169:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 1036,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2190:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1037,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2190:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1035,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2182:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1034,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2182:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1038,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2182:19:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1030,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "2135:19:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$returns$_t_contract$_CLBurnableToken_$1276_$",
                        "typeString": "function (string memory,string memory,uint256,address) returns (contract CLBurnableToken)"
                      },
                      "typeName": {
                        "id": 1029,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1028,
                          "name": "CLBurnableToken",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1276,
                          "src": "2139:15:6"
                        },
                        "referencedDeclaration": 1276,
                        "src": "2139:15:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CLBurnableToken_$1276",
                          "typeString": "contract CLBurnableToken"
                        }
                      }
                    },
                    "id": 1039,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2135:67:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CLBurnableToken_$1276",
                      "typeString": "contract CLBurnableToken"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2103:99:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 1050,
                              "name": "TokenType",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 869,
                              "src": "2269:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_TokenType_$869_$",
                                "typeString": "type(enum CryptoLauncher.TokenType)"
                              }
                            },
                            "id": 1051,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "BURNABLE_TOKEN",
                            "nodeType": "MemberAccess",
                            "src": "2269:24:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_TokenType_$869",
                              "typeString": "enum CryptoLauncher.TokenType"
                            }
                          },
                          {
                            "id": 1052,
                            "name": "launchedToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1027,
                            "src": "2295:13:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CLBurnableToken_$1276",
                              "typeString": "contract CLBurnableToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_TokenType_$869",
                              "typeString": "enum CryptoLauncher.TokenType"
                            },
                            {
                              "typeIdentifier": "t_contract$_CLBurnableToken_$1276",
                              "typeString": "contract CLBurnableToken"
                            }
                          ],
                          "id": 1049,
                          "name": "LaunchedToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 876,
                          "src": "2255:13:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_LaunchedToken_$876_storage_ptr_$",
                            "typeString": "type(struct CryptoLauncher.LaunchedToken storage pointer)"
                          }
                        },
                        "id": 1053,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2255:54:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LaunchedToken_$876_memory_ptr",
                          "typeString": "struct CryptoLauncher.LaunchedToken memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_LaunchedToken_$876_memory_ptr",
                          "typeString": "struct CryptoLauncher.LaunchedToken memory"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 1041,
                          "name": "_launchedTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 864,
                          "src": "2213:15:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_LaunchedToken_$876_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct CryptoLauncher.LaunchedToken storage ref[] storage ref)"
                          }
                        },
                        "id": 1047,
                        "indexExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1044,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2237:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1045,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2237:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1043,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2229:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1042,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2229:7:6",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1046,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2229:19:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2213:36:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_LaunchedToken_$876_storage_$dyn_storage",
                          "typeString": "struct CryptoLauncher.LaunchedToken storage ref[] storage ref"
                        }
                      },
                      "id": 1048,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "2213:41:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_LaunchedToken_$876_storage_$returns$__$",
                        "typeString": "function (struct CryptoLauncher.LaunchedToken storage ref)"
                      }
                    },
                    "id": 1054,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2213:97:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1055,
                  "nodeType": "ExpressionStatement",
                  "src": "2213:97:6"
                }
              ]
            },
            "functionSelector": "8ffadfe4",
            "id": 1057,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "launchBurnableToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1015,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1010,
                  "mutability": "mutable",
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 1057,
                  "src": "1948:18:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1009,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1948:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1012,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 1057,
                  "src": "1968:20:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1011,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1968:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1014,
                  "mutability": "mutable",
                  "name": "totalSupply",
                  "nodeType": "VariableDeclaration",
                  "scope": 1057,
                  "src": "1990:19:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1013,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1990:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1947:63:6"
            },
            "returnParameters": {
              "id": 1016,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2026:0:6"
            },
            "scope": 1209,
            "src": "1919:399:6",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1105,
              "nodeType": "Block",
              "src": "2439:325:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1070,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1067,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2458:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1068,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "2458:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1069,
                          "name": "_mintableBurnableTokenFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 858,
                          "src": "2471:25:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2458:38:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "466565207265717569726564",
                        "id": 1071,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2498:14:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_de16f84f455abb230e1a373e94065ffb18b4a65a389f6a1da708211bb3fcf061",
                          "typeString": "literal_string \"Fee required\""
                        },
                        "value": "Fee required"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_de16f84f455abb230e1a373e94065ffb18b4a65a389f6a1da708211bb3fcf061",
                          "typeString": "literal_string \"Fee required\""
                        }
                      ],
                      "id": 1066,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2450:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1072,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2450:63:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1073,
                  "nodeType": "ExpressionStatement",
                  "src": "2450:63:6"
                },
                {
                  "assignments": [
                    1076
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1076,
                      "mutability": "mutable",
                      "name": "launchedToken",
                      "nodeType": "VariableDeclaration",
                      "scope": 1105,
                      "src": "2524:37:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CLMintableBurnableToken_$1332",
                        "typeString": "contract CLMintableBurnableToken"
                      },
                      "typeName": {
                        "id": 1075,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1074,
                          "name": "CLMintableBurnableToken",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1332,
                          "src": "2524:23:6"
                        },
                        "referencedDeclaration": 1332,
                        "src": "2524:23:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CLMintableBurnableToken_$1332",
                          "typeString": "contract CLMintableBurnableToken"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1089,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1080,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1059,
                        "src": "2592:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 1081,
                        "name": "symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1061,
                        "src": "2598:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 1082,
                        "name": "totalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1063,
                        "src": "2606:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 1085,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2627:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1086,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2627:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1084,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2619:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1083,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2619:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1087,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2619:19:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1079,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "2564:27:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$returns$_t_contract$_CLMintableBurnableToken_$1332_$",
                        "typeString": "function (string memory,string memory,uint256,address) returns (contract CLMintableBurnableToken)"
                      },
                      "typeName": {
                        "id": 1078,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1077,
                          "name": "CLMintableBurnableToken",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1332,
                          "src": "2568:23:6"
                        },
                        "referencedDeclaration": 1332,
                        "src": "2568:23:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CLMintableBurnableToken_$1332",
                          "typeString": "contract CLMintableBurnableToken"
                        }
                      }
                    },
                    "id": 1088,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2564:75:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CLMintableBurnableToken_$1332",
                      "typeString": "contract CLMintableBurnableToken"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2524:115:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 1099,
                              "name": "TokenType",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 869,
                              "src": "2706:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_TokenType_$869_$",
                                "typeString": "type(enum CryptoLauncher.TokenType)"
                              }
                            },
                            "id": 1100,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "MINTABLE_BURNABLE_TOKEN",
                            "nodeType": "MemberAccess",
                            "src": "2706:33:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_TokenType_$869",
                              "typeString": "enum CryptoLauncher.TokenType"
                            }
                          },
                          {
                            "id": 1101,
                            "name": "launchedToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1076,
                            "src": "2741:13:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CLMintableBurnableToken_$1332",
                              "typeString": "contract CLMintableBurnableToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_TokenType_$869",
                              "typeString": "enum CryptoLauncher.TokenType"
                            },
                            {
                              "typeIdentifier": "t_contract$_CLMintableBurnableToken_$1332",
                              "typeString": "contract CLMintableBurnableToken"
                            }
                          ],
                          "id": 1098,
                          "name": "LaunchedToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 876,
                          "src": "2692:13:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_LaunchedToken_$876_storage_ptr_$",
                            "typeString": "type(struct CryptoLauncher.LaunchedToken storage pointer)"
                          }
                        },
                        "id": 1102,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2692:63:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LaunchedToken_$876_memory_ptr",
                          "typeString": "struct CryptoLauncher.LaunchedToken memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_LaunchedToken_$876_memory_ptr",
                          "typeString": "struct CryptoLauncher.LaunchedToken memory"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 1090,
                          "name": "_launchedTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 864,
                          "src": "2650:15:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_LaunchedToken_$876_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct CryptoLauncher.LaunchedToken storage ref[] storage ref)"
                          }
                        },
                        "id": 1096,
                        "indexExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1093,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2674:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1094,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2674:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1092,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2666:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1091,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2666:7:6",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1095,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2666:19:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2650:36:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_LaunchedToken_$876_storage_$dyn_storage",
                          "typeString": "struct CryptoLauncher.LaunchedToken storage ref[] storage ref"
                        }
                      },
                      "id": 1097,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "2650:41:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_LaunchedToken_$876_storage_$returns$__$",
                        "typeString": "function (struct CryptoLauncher.LaunchedToken storage ref)"
                      }
                    },
                    "id": 1103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2650:106:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1104,
                  "nodeType": "ExpressionStatement",
                  "src": "2650:106:6"
                }
              ]
            },
            "functionSelector": "4d59d154",
            "id": 1106,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "launchMintableBurnableToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1064,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1059,
                  "mutability": "mutable",
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 1106,
                  "src": "2361:18:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1058,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2361:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1061,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 1106,
                  "src": "2381:20:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1060,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2381:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1063,
                  "mutability": "mutable",
                  "name": "totalSupply",
                  "nodeType": "VariableDeclaration",
                  "scope": 1106,
                  "src": "2403:19:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1062,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2403:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2360:63:6"
            },
            "returnParameters": {
              "id": 1065,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2439:0:6"
            },
            "scope": 1209,
            "src": "2324:440:6",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1120,
              "nodeType": "Block",
              "src": "2790:96:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1115,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1109,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 846,
                          "src": "2809:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1112,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2827:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1113,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2827:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1111,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2819:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1110,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2819:7:6",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1114,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2819:19:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2809:29:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616c6c6572206973206e6f7420746865206f776e6572",
                        "id": 1116,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2840:25:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_15ed5034391ed5ef65b8bb8dbcb08f9b6c4034ebcf89f76344a17e1651e92b33",
                          "typeString": "literal_string \"Caller is not the owner\""
                        },
                        "value": "Caller is not the owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_15ed5034391ed5ef65b8bb8dbcb08f9b6c4034ebcf89f76344a17e1651e92b33",
                          "typeString": "literal_string \"Caller is not the owner\""
                        }
                      ],
                      "id": 1108,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2801:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2801:65:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1118,
                  "nodeType": "ExpressionStatement",
                  "src": "2801:65:6"
                },
                {
                  "id": 1119,
                  "nodeType": "PlaceholderStatement",
                  "src": "2877:1:6"
                }
              ]
            },
            "id": 1121,
            "name": "onlyCL",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1107,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2787:2:6"
            },
            "src": "2772:114:6",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1186,
              "nodeType": "Block",
              "src": "2952:506:6",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1130,
                      "name": "action",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1123,
                      "src": "2966:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 1133,
                            "name": "TokenType",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 869,
                            "src": "2981:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_TokenType_$869_$",
                              "typeString": "type(enum CryptoLauncher.TokenType)"
                            }
                          },
                          "id": 1134,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "SIMPLE_TOKEN",
                          "nodeType": "MemberAccess",
                          "src": "2981:22:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_TokenType_$869",
                            "typeString": "enum CryptoLauncher.TokenType"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_enum$_TokenType_$869",
                            "typeString": "enum CryptoLauncher.TokenType"
                          }
                        ],
                        "id": 1132,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2976:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": {
                          "id": 1131,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2976:4:6",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1135,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2976:28:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2966:38:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1149,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1143,
                        "name": "action",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1123,
                        "src": "3084:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 1146,
                              "name": "TokenType",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 869,
                              "src": "3099:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_TokenType_$869_$",
                                "typeString": "type(enum CryptoLauncher.TokenType)"
                              }
                            },
                            "id": 1147,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "MINTABLE_TOKEN",
                            "nodeType": "MemberAccess",
                            "src": "3099:24:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_TokenType_$869",
                              "typeString": "enum CryptoLauncher.TokenType"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_TokenType_$869",
                              "typeString": "enum CryptoLauncher.TokenType"
                            }
                          ],
                          "id": 1145,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3094:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 1144,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "3094:4:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1148,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3094:30:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3084:40:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1162,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1156,
                          "name": "action",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1123,
                          "src": "3206:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1159,
                                "name": "TokenType",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 869,
                                "src": "3221:9:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_TokenType_$869_$",
                                  "typeString": "type(enum CryptoLauncher.TokenType)"
                                }
                              },
                              "id": 1160,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "BURNABLE_TOKEN",
                              "nodeType": "MemberAccess",
                              "src": "3221:24:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_TokenType_$869",
                                "typeString": "enum CryptoLauncher.TokenType"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_TokenType_$869",
                                "typeString": "enum CryptoLauncher.TokenType"
                              }
                            ],
                            "id": 1158,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3216:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 1157,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "3216:4:6",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1161,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3216:30:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3206:40:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1175,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1169,
                            "name": "action",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1123,
                            "src": "3328:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 1172,
                                  "name": "TokenType",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 869,
                                  "src": "3343:9:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_TokenType_$869_$",
                                    "typeString": "type(enum CryptoLauncher.TokenType)"
                                  }
                                },
                                "id": 1173,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "MINTABLE_BURNABLE_TOKEN",
                                "nodeType": "MemberAccess",
                                "src": "3343:33:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_TokenType_$869",
                                  "typeString": "enum CryptoLauncher.TokenType"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_enum$_TokenType_$869",
                                  "typeString": "enum CryptoLauncher.TokenType"
                                }
                              ],
                              "id": 1171,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3338:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 1170,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "3338:4:6",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1174,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3338:39:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3328:49:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1182,
                        "nodeType": "IfStatement",
                        "src": "3325:126:6",
                        "trueBody": {
                          "id": 1181,
                          "nodeType": "Block",
                          "src": "3378:73:6",
                          "statements": [
                            {
                              "expression": {
                                "id": 1178,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1176,
                                  "name": "_mintableTokenFee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 852,
                                  "src": "3393:17:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 1177,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1125,
                                  "src": "3413:5:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3393:25:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1179,
                              "nodeType": "ExpressionStatement",
                              "src": "3393:25:6"
                            },
                            {
                              "functionReturnParameters": 1129,
                              "id": 1180,
                              "nodeType": "Return",
                              "src": "3433:7:6"
                            }
                          ]
                        }
                      },
                      "id": 1183,
                      "nodeType": "IfStatement",
                      "src": "3203:248:6",
                      "trueBody": {
                        "id": 1168,
                        "nodeType": "Block",
                        "src": "3247:73:6",
                        "statements": [
                          {
                            "expression": {
                              "id": 1165,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 1163,
                                "name": "_burnableTokenFee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 855,
                                "src": "3262:17:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "id": 1164,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1125,
                                "src": "3282:5:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "3262:25:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1166,
                            "nodeType": "ExpressionStatement",
                            "src": "3262:25:6"
                          },
                          {
                            "functionReturnParameters": 1129,
                            "id": 1167,
                            "nodeType": "Return",
                            "src": "3302:7:6"
                          }
                        ]
                      }
                    },
                    "id": 1184,
                    "nodeType": "IfStatement",
                    "src": "3081:370:6",
                    "trueBody": {
                      "id": 1155,
                      "nodeType": "Block",
                      "src": "3125:73:6",
                      "statements": [
                        {
                          "expression": {
                            "id": 1152,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 1150,
                              "name": "_mintableTokenFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 852,
                              "src": "3140:17:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "id": 1151,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1125,
                              "src": "3160:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "3140:25:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1153,
                          "nodeType": "ExpressionStatement",
                          "src": "3140:25:6"
                        },
                        {
                          "functionReturnParameters": 1129,
                          "id": 1154,
                          "nodeType": "Return",
                          "src": "3180:7:6"
                        }
                      ]
                    }
                  },
                  "id": 1185,
                  "nodeType": "IfStatement",
                  "src": "2963:488:6",
                  "trueBody": {
                    "id": 1142,
                    "nodeType": "Block",
                    "src": "3005:71:6",
                    "statements": [
                      {
                        "expression": {
                          "id": 1139,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1137,
                            "name": "_simpleTokenFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 849,
                            "src": "3020:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1138,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1125,
                            "src": "3038:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3020:23:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1140,
                        "nodeType": "ExpressionStatement",
                        "src": "3020:23:6"
                      },
                      {
                        "functionReturnParameters": 1129,
                        "id": 1141,
                        "nodeType": "Return",
                        "src": "3058:7:6"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "52f7c988",
            "id": 1187,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1128,
                "modifierName": {
                  "id": 1127,
                  "name": "onlyCL",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1121,
                  "src": "2938:6:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "2938:6:6"
              }
            ],
            "name": "setFee",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1126,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1123,
                  "mutability": "mutable",
                  "name": "action",
                  "nodeType": "VariableDeclaration",
                  "scope": 1187,
                  "src": "2910:11:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1122,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2910:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1125,
                  "mutability": "mutable",
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 1187,
                  "src": "2923:13:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1124,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2923:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2909:28:6"
            },
            "returnParameters": {
              "id": 1129,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2952:0:6"
            },
            "scope": 1209,
            "src": "2894:564:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1207,
              "nodeType": "Block",
              "src": "3507:75:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1201,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "3559:4:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_CryptoLauncher_$1209",
                                    "typeString": "contract CryptoLauncher"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_CryptoLauncher_$1209",
                                    "typeString": "contract CryptoLauncher"
                                  }
                                ],
                                "id": 1200,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3551:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1199,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3551:7:6",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1202,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3551:13:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 1203,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balance",
                            "nodeType": "MemberAccess",
                            "src": "3551:21:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 1195,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "3534:3:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1196,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "3534:10:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 1194,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3526:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_payable_$",
                                "typeString": "type(address payable)"
                              },
                              "typeName": {
                                "id": 1193,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3526:8:6",
                                "stateMutability": "payable",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1197,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3526:19:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "id": 1198,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "send",
                          "nodeType": "MemberAccess",
                          "src": "3526:24:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_send_nonpayable$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) returns (bool)"
                          }
                        },
                        "id": 1204,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3526:47:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1192,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3518:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3518:56:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1206,
                  "nodeType": "ExpressionStatement",
                  "src": "3518:56:6"
                }
              ]
            },
            "functionSelector": "24600fc3",
            "id": 1208,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1190,
                "modifierName": {
                  "id": 1189,
                  "name": "onlyCL",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1121,
                  "src": "3491:6:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "3491:6:6"
              }
            ],
            "name": "withdrawFunds",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1188,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3488:2:6"
            },
            "returnParameters": {
              "id": 1191,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3507:0:6"
            },
            "scope": 1209,
            "src": "3466:116:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1210,
        "src": "234:3353:6"
      }
    ],
    "src": "39:3548:6"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/CryptoLauncher.sol",
    "exportedSymbols": {
      "CLBurnableToken": [
        1276
      ],
      "CLMintableBurnableToken": [
        1332
      ],
      "CLMintableToken": [
        1385
      ],
      "CLTokenSimple": [
        1417
      ],
      "Context": [
        837
      ],
      "CryptoLauncher": [
        1209
      ],
      "ERC20": [
        650
      ],
      "ERC20Burnable": [
        790
      ],
      "IERC20": [
        728
      ],
      "IERC20Metadata": [
        815
      ],
      "Ownable": [
        104
      ]
    },
    "id": 1210,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 839,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:23:6"
      },
      {
        "absolutePath": "project:/contracts/tokens/CLTokenSimple.sol",
        "file": "./tokens/CLTokenSimple.sol",
        "id": 840,
        "nodeType": "ImportDirective",
        "scope": 1210,
        "sourceUnit": 1418,
        "src": "66:36:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/tokens/CLMintableToken.sol",
        "file": "./tokens/CLMintableToken.sol",
        "id": 841,
        "nodeType": "ImportDirective",
        "scope": 1210,
        "sourceUnit": 1386,
        "src": "104:38:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/tokens/CLBurnableToken.sol",
        "file": "./tokens/CLBurnableToken.sol",
        "id": 842,
        "nodeType": "ImportDirective",
        "scope": 1210,
        "sourceUnit": 1277,
        "src": "144:38:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/tokens/CLMintableBurnableToken.sol",
        "file": "./tokens/CLMintableBurnableToken.sol",
        "id": 843,
        "nodeType": "ImportDirective",
        "scope": 1210,
        "sourceUnit": 1333,
        "src": "184:46:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [
          1276,
          1332,
          1385,
          1417
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1209,
        "linearizedBaseContracts": [
          1209
        ],
        "name": "CryptoLauncher",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 846,
            "mutability": "mutable",
            "name": "_owner",
            "nodeType": "VariableDeclaration",
            "scope": 1209,
            "src": "267:59:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 844,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "267:7:6",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "hexValue": "307835423338446136613730316335363835343564436663423033466342383735663536626564644334",
              "id": 845,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "284:42:6",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "value": "0x5B38Da6a701c568545dCfcB03FcB875f56beddC4"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 849,
            "mutability": "mutable",
            "name": "_simpleTokenFee",
            "nodeType": "VariableDeclaration",
            "scope": 1209,
            "src": "335:43:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 847,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "335:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3230303030303030303030303030303030",
              "id": 848,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "361:17:6",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_20000000000000000_by_1",
                "typeString": "int_const 20000000000000000"
              },
              "value": "20000000000000000"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 852,
            "mutability": "mutable",
            "name": "_mintableTokenFee",
            "nodeType": "VariableDeclaration",
            "scope": 1209,
            "src": "385:45:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 850,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "385:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3235303030303030303030303030303030",
              "id": 851,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "413:17:6",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_25000000000000000_by_1",
                "typeString": "int_const 25000000000000000"
              },
              "value": "25000000000000000"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 855,
            "mutability": "mutable",
            "name": "_burnableTokenFee",
            "nodeType": "VariableDeclaration",
            "scope": 1209,
            "src": "437:45:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 853,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "437:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3330303030303030303030303030303030",
              "id": 854,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "465:17:6",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_30000000000000000_by_1",
                "typeString": "int_const 30000000000000000"
              },
              "value": "30000000000000000"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 858,
            "mutability": "mutable",
            "name": "_mintableBurnableTokenFee",
            "nodeType": "VariableDeclaration",
            "scope": 1209,
            "src": "489:53:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 856,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "489:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "3430303030303030303030303030303030",
              "id": 857,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "525:17:6",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_40000000000000000_by_1",
                "typeString": "int_const 40000000000000000"
              },
              "value": "40000000000000000"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "160c37ab",
            "id": 864,
            "mutability": "mutable",
            "name": "_launchedTokens",
            "nodeType": "VariableDeclaration",
            "scope": 1209,
            "src": "573:58:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_LaunchedToken_$876_storage_$dyn_storage_$",
              "typeString": "mapping(address => struct CryptoLauncher.LaunchedToken[])"
            },
            "typeName": {
              "id": 863,
              "keyType": {
                "id": 859,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "581:7:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "573:35:6",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_LaunchedToken_$876_storage_$dyn_storage_$",
                "typeString": "mapping(address => struct CryptoLauncher.LaunchedToken[])"
              },
              "valueType": {
                "baseType": {
                  "id": 861,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 860,
                    "name": "LaunchedToken",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 876,
                    "src": "592:13:6"
                  },
                  "referencedDeclaration": 876,
                  "src": "592:13:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_LaunchedToken_$876_storage_ptr",
                    "typeString": "struct CryptoLauncher.LaunchedToken"
                  }
                },
                "id": 862,
                "nodeType": "ArrayTypeName",
                "src": "592:15:6",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_LaunchedToken_$876_storage_$dyn_storage_ptr",
                  "typeString": "struct CryptoLauncher.LaunchedToken[]"
                }
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "CryptoLauncher.TokenType",
            "id": 869,
            "members": [
              {
                "id": 865,
                "name": "SIMPLE_TOKEN",
                "nodeType": "EnumValue",
                "src": "656:12:6"
              },
              {
                "id": 866,
                "name": "MINTABLE_TOKEN",
                "nodeType": "EnumValue",
                "src": "670:14:6"
              },
              {
                "id": 867,
                "name": "BURNABLE_TOKEN",
                "nodeType": "EnumValue",
                "src": "686:14:6"
              },
              {
                "id": 868,
                "name": "MINTABLE_BURNABLE_TOKEN",
                "nodeType": "EnumValue",
                "src": "702:23:6"
              }
            ],
            "name": "TokenType",
            "nodeType": "EnumDefinition",
            "src": "640:87:6"
          },
          {
            "canonicalName": "CryptoLauncher.LaunchedToken",
            "id": 876,
            "members": [
              {
                "constant": false,
                "id": 872,
                "mutability": "mutable",
                "name": "tokenType",
                "nodeType": "VariableDeclaration",
                "scope": 876,
                "src": "767:19:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_TokenType_$869",
                  "typeString": "enum CryptoLauncher.TokenType"
                },
                "typeName": {
                  "id": 871,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 870,
                    "name": "TokenType",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 869,
                    "src": "767:9:6"
                  },
                  "referencedDeclaration": 869,
                  "src": "767:9:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_TokenType_$869",
                    "typeString": "enum CryptoLauncher.TokenType"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 875,
                "mutability": "mutable",
                "name": "token",
                "nodeType": "VariableDeclaration",
                "scope": 876,
                "src": "797:11:6",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_ERC20_$650",
                  "typeString": "contract ERC20"
                },
                "typeName": {
                  "id": 874,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 873,
                    "name": "ERC20",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 650,
                    "src": "797:5:6"
                  },
                  "referencedDeclaration": 650,
                  "src": "797:5:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$650",
                    "typeString": "contract ERC20"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "LaunchedToken",
            "nodeType": "StructDefinition",
            "scope": 1209,
            "src": "735:81:6",
            "visibility": "public"
          },
          {
            "body": {
              "id": 890,
              "nodeType": "Block",
              "src": "886:69:6",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 881,
                        "name": "_launchedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 864,
                        "src": "904:15:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_LaunchedToken_$876_storage_$dyn_storage_$",
                          "typeString": "mapping(address => struct CryptoLauncher.LaunchedToken storage ref[] storage ref)"
                        }
                      },
                      "id": 887,
                      "indexExpression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 884,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "928:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 885,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "928:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 883,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "920:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 882,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "920:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 886,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "920:19:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "904:36:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_LaunchedToken_$876_storage_$dyn_storage",
                        "typeString": "struct CryptoLauncher.LaunchedToken storage ref[] storage ref"
                      }
                    },
                    "id": 888,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "904:43:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 880,
                  "id": 889,
                  "nodeType": "Return",
                  "src": "897:50:6"
                }
              ]
            },
            "functionSelector": "4f24b34b",
            "id": 891,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMyLaunchedTokensLength",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 877,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "858:2:6"
            },
            "returnParameters": {
              "id": 880,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 879,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 891,
                  "src": "881:4:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 878,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "881:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "880:6:6"
            },
            "scope": 1209,
            "src": "824:131:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 909,
              "nodeType": "Block",
              "src": "1042:69:6",
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 899,
                        "name": "_launchedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 864,
                        "src": "1060:15:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_LaunchedToken_$876_storage_$dyn_storage_$",
                          "typeString": "mapping(address => struct CryptoLauncher.LaunchedToken storage ref[] storage ref)"
                        }
                      },
                      "id": 905,
                      "indexExpression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 902,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1084:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 903,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1084:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 901,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1076:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 900,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1076:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 904,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1076:19:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1060:36:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_LaunchedToken_$876_storage_$dyn_storage",
                        "typeString": "struct CryptoLauncher.LaunchedToken storage ref[] storage ref"
                      }
                    },
                    "id": 907,
                    "indexExpression": {
                      "id": 906,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 893,
                      "src": "1097:5:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1060:43:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LaunchedToken_$876_storage",
                      "typeString": "struct CryptoLauncher.LaunchedToken storage ref"
                    }
                  },
                  "functionReturnParameters": 898,
                  "id": 908,
                  "nodeType": "Return",
                  "src": "1053:50:6"
                }
              ]
            },
            "functionSelector": "aee2a82e",
            "id": 910,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getMyLaunchedToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 894,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 893,
                  "mutability": "mutable",
                  "name": "index",
                  "nodeType": "VariableDeclaration",
                  "scope": 910,
                  "src": "989:10:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 892,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "989:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "988:12:6"
            },
            "returnParameters": {
              "id": 898,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 897,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 910,
                  "src": "1021:20:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_LaunchedToken_$876_memory_ptr",
                    "typeString": "struct CryptoLauncher.LaunchedToken"
                  },
                  "typeName": {
                    "id": 896,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 895,
                      "name": "LaunchedToken",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 876,
                      "src": "1021:13:6"
                    },
                    "referencedDeclaration": 876,
                    "src": "1021:13:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_LaunchedToken_$876_storage_ptr",
                      "typeString": "struct CryptoLauncher.LaunchedToken"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1020:22:6"
            },
            "scope": 1209,
            "src": "961:150:6",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 958,
              "nodeType": "Block",
              "src": "1224:284:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 923,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 920,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1243:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 921,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "1243:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 922,
                          "name": "_simpleTokenFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 849,
                          "src": "1256:15:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1243:28:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "466565207265717569726564",
                        "id": 924,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1273:14:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_de16f84f455abb230e1a373e94065ffb18b4a65a389f6a1da708211bb3fcf061",
                          "typeString": "literal_string \"Fee required\""
                        },
                        "value": "Fee required"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_de16f84f455abb230e1a373e94065ffb18b4a65a389f6a1da708211bb3fcf061",
                          "typeString": "literal_string \"Fee required\""
                        }
                      ],
                      "id": 919,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1235:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 925,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1235:53:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 926,
                  "nodeType": "ExpressionStatement",
                  "src": "1235:53:6"
                },
                {
                  "assignments": [
                    929
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 929,
                      "mutability": "mutable",
                      "name": "launchedToken",
                      "nodeType": "VariableDeclaration",
                      "scope": 958,
                      "src": "1299:27:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CLTokenSimple_$1417",
                        "typeString": "contract CLTokenSimple"
                      },
                      "typeName": {
                        "id": 928,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 927,
                          "name": "CLTokenSimple",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1417,
                          "src": "1299:13:6"
                        },
                        "referencedDeclaration": 1417,
                        "src": "1299:13:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CLTokenSimple_$1417",
                          "typeString": "contract CLTokenSimple"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 942,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 933,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 912,
                        "src": "1347:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 934,
                        "name": "symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 914,
                        "src": "1353:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 935,
                        "name": "totalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 916,
                        "src": "1361:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 938,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1382:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 939,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1382:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 937,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1374:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 936,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1374:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 940,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1374:19:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 932,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1329:17:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$returns$_t_contract$_CLTokenSimple_$1417_$",
                        "typeString": "function (string memory,string memory,uint256,address) returns (contract CLTokenSimple)"
                      },
                      "typeName": {
                        "id": 931,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 930,
                          "name": "CLTokenSimple",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1417,
                          "src": "1333:13:6"
                        },
                        "referencedDeclaration": 1417,
                        "src": "1333:13:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CLTokenSimple_$1417",
                          "typeString": "contract CLTokenSimple"
                        }
                      }
                    },
                    "id": 941,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1329:65:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CLTokenSimple_$1417",
                      "typeString": "contract CLTokenSimple"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1299:95:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 952,
                              "name": "TokenType",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 869,
                              "src": "1461:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_TokenType_$869_$",
                                "typeString": "type(enum CryptoLauncher.TokenType)"
                              }
                            },
                            "id": 953,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "SIMPLE_TOKEN",
                            "nodeType": "MemberAccess",
                            "src": "1461:22:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_TokenType_$869",
                              "typeString": "enum CryptoLauncher.TokenType"
                            }
                          },
                          {
                            "id": 954,
                            "name": "launchedToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 929,
                            "src": "1485:13:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CLTokenSimple_$1417",
                              "typeString": "contract CLTokenSimple"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_TokenType_$869",
                              "typeString": "enum CryptoLauncher.TokenType"
                            },
                            {
                              "typeIdentifier": "t_contract$_CLTokenSimple_$1417",
                              "typeString": "contract CLTokenSimple"
                            }
                          ],
                          "id": 951,
                          "name": "LaunchedToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 876,
                          "src": "1447:13:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_LaunchedToken_$876_storage_ptr_$",
                            "typeString": "type(struct CryptoLauncher.LaunchedToken storage pointer)"
                          }
                        },
                        "id": 955,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1447:52:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LaunchedToken_$876_memory_ptr",
                          "typeString": "struct CryptoLauncher.LaunchedToken memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_LaunchedToken_$876_memory_ptr",
                          "typeString": "struct CryptoLauncher.LaunchedToken memory"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 943,
                          "name": "_launchedTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 864,
                          "src": "1405:15:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_LaunchedToken_$876_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct CryptoLauncher.LaunchedToken storage ref[] storage ref)"
                          }
                        },
                        "id": 949,
                        "indexExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 946,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1429:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 947,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1429:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 945,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1421:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 944,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1421:7:6",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 948,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1421:19:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1405:36:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_LaunchedToken_$876_storage_$dyn_storage",
                          "typeString": "struct CryptoLauncher.LaunchedToken storage ref[] storage ref"
                        }
                      },
                      "id": 950,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1405:41:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_LaunchedToken_$876_storage_$returns$__$",
                        "typeString": "function (struct CryptoLauncher.LaunchedToken storage ref)"
                      }
                    },
                    "id": 956,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1405:95:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 957,
                  "nodeType": "ExpressionStatement",
                  "src": "1405:95:6"
                }
              ]
            },
            "functionSelector": "5ba6f265",
            "id": 959,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "launchSimpleToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 917,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 912,
                  "mutability": "mutable",
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 959,
                  "src": "1146:18:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 911,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1146:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 914,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 959,
                  "src": "1166:20:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 913,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1166:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 916,
                  "mutability": "mutable",
                  "name": "totalSupply",
                  "nodeType": "VariableDeclaration",
                  "scope": 959,
                  "src": "1188:19:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 915,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1188:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1145:63:6"
            },
            "returnParameters": {
              "id": 918,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1224:0:6"
            },
            "scope": 1209,
            "src": "1119:389:6",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1007,
              "nodeType": "Block",
              "src": "1621:292:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 972,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 969,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1640:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 970,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "1640:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 971,
                          "name": "_mintableTokenFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 852,
                          "src": "1653:17:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1640:30:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "466565207265717569726564",
                        "id": 973,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1672:14:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_de16f84f455abb230e1a373e94065ffb18b4a65a389f6a1da708211bb3fcf061",
                          "typeString": "literal_string \"Fee required\""
                        },
                        "value": "Fee required"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_de16f84f455abb230e1a373e94065ffb18b4a65a389f6a1da708211bb3fcf061",
                          "typeString": "literal_string \"Fee required\""
                        }
                      ],
                      "id": 968,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1632:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 974,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1632:55:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 975,
                  "nodeType": "ExpressionStatement",
                  "src": "1632:55:6"
                },
                {
                  "assignments": [
                    978
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 978,
                      "mutability": "mutable",
                      "name": "launchedToken",
                      "nodeType": "VariableDeclaration",
                      "scope": 1007,
                      "src": "1698:29:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CLMintableToken_$1385",
                        "typeString": "contract CLMintableToken"
                      },
                      "typeName": {
                        "id": 977,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 976,
                          "name": "CLMintableToken",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1385,
                          "src": "1698:15:6"
                        },
                        "referencedDeclaration": 1385,
                        "src": "1698:15:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CLMintableToken_$1385",
                          "typeString": "contract CLMintableToken"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 991,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 982,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 961,
                        "src": "1750:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 983,
                        "name": "symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 963,
                        "src": "1756:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 984,
                        "name": "totalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 965,
                        "src": "1764:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 987,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "1785:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 988,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "1785:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 986,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1777:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 985,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1777:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 989,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1777:19:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 981,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1730:19:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$returns$_t_contract$_CLMintableToken_$1385_$",
                        "typeString": "function (string memory,string memory,uint256,address) returns (contract CLMintableToken)"
                      },
                      "typeName": {
                        "id": 980,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 979,
                          "name": "CLMintableToken",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1385,
                          "src": "1734:15:6"
                        },
                        "referencedDeclaration": 1385,
                        "src": "1734:15:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CLMintableToken_$1385",
                          "typeString": "contract CLMintableToken"
                        }
                      }
                    },
                    "id": 990,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1730:67:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CLMintableToken_$1385",
                      "typeString": "contract CLMintableToken"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1698:99:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 1001,
                              "name": "TokenType",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 869,
                              "src": "1864:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_TokenType_$869_$",
                                "typeString": "type(enum CryptoLauncher.TokenType)"
                              }
                            },
                            "id": 1002,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "MINTABLE_TOKEN",
                            "nodeType": "MemberAccess",
                            "src": "1864:24:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_TokenType_$869",
                              "typeString": "enum CryptoLauncher.TokenType"
                            }
                          },
                          {
                            "id": 1003,
                            "name": "launchedToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 978,
                            "src": "1890:13:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CLMintableToken_$1385",
                              "typeString": "contract CLMintableToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_TokenType_$869",
                              "typeString": "enum CryptoLauncher.TokenType"
                            },
                            {
                              "typeIdentifier": "t_contract$_CLMintableToken_$1385",
                              "typeString": "contract CLMintableToken"
                            }
                          ],
                          "id": 1000,
                          "name": "LaunchedToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 876,
                          "src": "1850:13:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_LaunchedToken_$876_storage_ptr_$",
                            "typeString": "type(struct CryptoLauncher.LaunchedToken storage pointer)"
                          }
                        },
                        "id": 1004,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1850:54:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LaunchedToken_$876_memory_ptr",
                          "typeString": "struct CryptoLauncher.LaunchedToken memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_LaunchedToken_$876_memory_ptr",
                          "typeString": "struct CryptoLauncher.LaunchedToken memory"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 992,
                          "name": "_launchedTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 864,
                          "src": "1808:15:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_LaunchedToken_$876_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct CryptoLauncher.LaunchedToken storage ref[] storage ref)"
                          }
                        },
                        "id": 998,
                        "indexExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 995,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "1832:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 996,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1832:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 994,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1824:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 993,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1824:7:6",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 997,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1824:19:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1808:36:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_LaunchedToken_$876_storage_$dyn_storage",
                          "typeString": "struct CryptoLauncher.LaunchedToken storage ref[] storage ref"
                        }
                      },
                      "id": 999,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1808:41:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_LaunchedToken_$876_storage_$returns$__$",
                        "typeString": "function (struct CryptoLauncher.LaunchedToken storage ref)"
                      }
                    },
                    "id": 1005,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1808:97:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1006,
                  "nodeType": "ExpressionStatement",
                  "src": "1808:97:6"
                }
              ]
            },
            "functionSelector": "430dc3c8",
            "id": 1008,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "launchMintableToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 966,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 961,
                  "mutability": "mutable",
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 1008,
                  "src": "1543:18:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 960,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1543:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 963,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 1008,
                  "src": "1563:20:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 962,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1563:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 965,
                  "mutability": "mutable",
                  "name": "totalSupply",
                  "nodeType": "VariableDeclaration",
                  "scope": 1008,
                  "src": "1585:19:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 964,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1585:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1542:63:6"
            },
            "returnParameters": {
              "id": 967,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1621:0:6"
            },
            "scope": 1209,
            "src": "1514:399:6",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1056,
              "nodeType": "Block",
              "src": "2026:292:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1021,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1018,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2045:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1019,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "2045:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1020,
                          "name": "_burnableTokenFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 855,
                          "src": "2058:17:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2045:30:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "466565207265717569726564",
                        "id": 1022,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2077:14:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_de16f84f455abb230e1a373e94065ffb18b4a65a389f6a1da708211bb3fcf061",
                          "typeString": "literal_string \"Fee required\""
                        },
                        "value": "Fee required"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_de16f84f455abb230e1a373e94065ffb18b4a65a389f6a1da708211bb3fcf061",
                          "typeString": "literal_string \"Fee required\""
                        }
                      ],
                      "id": 1017,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2037:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1023,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2037:55:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1024,
                  "nodeType": "ExpressionStatement",
                  "src": "2037:55:6"
                },
                {
                  "assignments": [
                    1027
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1027,
                      "mutability": "mutable",
                      "name": "launchedToken",
                      "nodeType": "VariableDeclaration",
                      "scope": 1056,
                      "src": "2103:29:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CLBurnableToken_$1276",
                        "typeString": "contract CLBurnableToken"
                      },
                      "typeName": {
                        "id": 1026,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1025,
                          "name": "CLBurnableToken",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1276,
                          "src": "2103:15:6"
                        },
                        "referencedDeclaration": 1276,
                        "src": "2103:15:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CLBurnableToken_$1276",
                          "typeString": "contract CLBurnableToken"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1040,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1031,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1010,
                        "src": "2155:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 1032,
                        "name": "symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1012,
                        "src": "2161:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 1033,
                        "name": "totalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1014,
                        "src": "2169:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 1036,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2190:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1037,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2190:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1035,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2182:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1034,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2182:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1038,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2182:19:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1030,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "2135:19:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$returns$_t_contract$_CLBurnableToken_$1276_$",
                        "typeString": "function (string memory,string memory,uint256,address) returns (contract CLBurnableToken)"
                      },
                      "typeName": {
                        "id": 1029,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1028,
                          "name": "CLBurnableToken",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1276,
                          "src": "2139:15:6"
                        },
                        "referencedDeclaration": 1276,
                        "src": "2139:15:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CLBurnableToken_$1276",
                          "typeString": "contract CLBurnableToken"
                        }
                      }
                    },
                    "id": 1039,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2135:67:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CLBurnableToken_$1276",
                      "typeString": "contract CLBurnableToken"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2103:99:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 1050,
                              "name": "TokenType",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 869,
                              "src": "2269:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_TokenType_$869_$",
                                "typeString": "type(enum CryptoLauncher.TokenType)"
                              }
                            },
                            "id": 1051,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "BURNABLE_TOKEN",
                            "nodeType": "MemberAccess",
                            "src": "2269:24:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_TokenType_$869",
                              "typeString": "enum CryptoLauncher.TokenType"
                            }
                          },
                          {
                            "id": 1052,
                            "name": "launchedToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1027,
                            "src": "2295:13:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CLBurnableToken_$1276",
                              "typeString": "contract CLBurnableToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_TokenType_$869",
                              "typeString": "enum CryptoLauncher.TokenType"
                            },
                            {
                              "typeIdentifier": "t_contract$_CLBurnableToken_$1276",
                              "typeString": "contract CLBurnableToken"
                            }
                          ],
                          "id": 1049,
                          "name": "LaunchedToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 876,
                          "src": "2255:13:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_LaunchedToken_$876_storage_ptr_$",
                            "typeString": "type(struct CryptoLauncher.LaunchedToken storage pointer)"
                          }
                        },
                        "id": 1053,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2255:54:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LaunchedToken_$876_memory_ptr",
                          "typeString": "struct CryptoLauncher.LaunchedToken memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_LaunchedToken_$876_memory_ptr",
                          "typeString": "struct CryptoLauncher.LaunchedToken memory"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 1041,
                          "name": "_launchedTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 864,
                          "src": "2213:15:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_LaunchedToken_$876_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct CryptoLauncher.LaunchedToken storage ref[] storage ref)"
                          }
                        },
                        "id": 1047,
                        "indexExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1044,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2237:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1045,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2237:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1043,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2229:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1042,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2229:7:6",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1046,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2229:19:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2213:36:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_LaunchedToken_$876_storage_$dyn_storage",
                          "typeString": "struct CryptoLauncher.LaunchedToken storage ref[] storage ref"
                        }
                      },
                      "id": 1048,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "2213:41:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_LaunchedToken_$876_storage_$returns$__$",
                        "typeString": "function (struct CryptoLauncher.LaunchedToken storage ref)"
                      }
                    },
                    "id": 1054,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2213:97:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1055,
                  "nodeType": "ExpressionStatement",
                  "src": "2213:97:6"
                }
              ]
            },
            "functionSelector": "8ffadfe4",
            "id": 1057,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "launchBurnableToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1015,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1010,
                  "mutability": "mutable",
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 1057,
                  "src": "1948:18:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1009,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1948:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1012,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 1057,
                  "src": "1968:20:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1011,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1968:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1014,
                  "mutability": "mutable",
                  "name": "totalSupply",
                  "nodeType": "VariableDeclaration",
                  "scope": 1057,
                  "src": "1990:19:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1013,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1990:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1947:63:6"
            },
            "returnParameters": {
              "id": 1016,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2026:0:6"
            },
            "scope": 1209,
            "src": "1919:399:6",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1105,
              "nodeType": "Block",
              "src": "2439:325:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1070,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1067,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2458:3:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1068,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "2458:9:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1069,
                          "name": "_mintableBurnableTokenFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 858,
                          "src": "2471:25:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2458:38:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "466565207265717569726564",
                        "id": 1071,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2498:14:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_de16f84f455abb230e1a373e94065ffb18b4a65a389f6a1da708211bb3fcf061",
                          "typeString": "literal_string \"Fee required\""
                        },
                        "value": "Fee required"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_de16f84f455abb230e1a373e94065ffb18b4a65a389f6a1da708211bb3fcf061",
                          "typeString": "literal_string \"Fee required\""
                        }
                      ],
                      "id": 1066,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2450:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1072,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2450:63:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1073,
                  "nodeType": "ExpressionStatement",
                  "src": "2450:63:6"
                },
                {
                  "assignments": [
                    1076
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1076,
                      "mutability": "mutable",
                      "name": "launchedToken",
                      "nodeType": "VariableDeclaration",
                      "scope": 1105,
                      "src": "2524:37:6",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CLMintableBurnableToken_$1332",
                        "typeString": "contract CLMintableBurnableToken"
                      },
                      "typeName": {
                        "id": 1075,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1074,
                          "name": "CLMintableBurnableToken",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1332,
                          "src": "2524:23:6"
                        },
                        "referencedDeclaration": 1332,
                        "src": "2524:23:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CLMintableBurnableToken_$1332",
                          "typeString": "contract CLMintableBurnableToken"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1089,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 1080,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1059,
                        "src": "2592:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 1081,
                        "name": "symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1061,
                        "src": "2598:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 1082,
                        "name": "totalSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1063,
                        "src": "2606:11:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 1085,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2627:3:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1086,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2627:10:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1084,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2619:7:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1083,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2619:7:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1087,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2619:19:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 1079,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "2564:27:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_address_$returns$_t_contract$_CLMintableBurnableToken_$1332_$",
                        "typeString": "function (string memory,string memory,uint256,address) returns (contract CLMintableBurnableToken)"
                      },
                      "typeName": {
                        "id": 1078,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 1077,
                          "name": "CLMintableBurnableToken",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1332,
                          "src": "2568:23:6"
                        },
                        "referencedDeclaration": 1332,
                        "src": "2568:23:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CLMintableBurnableToken_$1332",
                          "typeString": "contract CLMintableBurnableToken"
                        }
                      }
                    },
                    "id": 1088,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2564:75:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CLMintableBurnableToken_$1332",
                      "typeString": "contract CLMintableBurnableToken"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2524:115:6"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 1099,
                              "name": "TokenType",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 869,
                              "src": "2706:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_TokenType_$869_$",
                                "typeString": "type(enum CryptoLauncher.TokenType)"
                              }
                            },
                            "id": 1100,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "MINTABLE_BURNABLE_TOKEN",
                            "nodeType": "MemberAccess",
                            "src": "2706:33:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_TokenType_$869",
                              "typeString": "enum CryptoLauncher.TokenType"
                            }
                          },
                          {
                            "id": 1101,
                            "name": "launchedToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1076,
                            "src": "2741:13:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CLMintableBurnableToken_$1332",
                              "typeString": "contract CLMintableBurnableToken"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_TokenType_$869",
                              "typeString": "enum CryptoLauncher.TokenType"
                            },
                            {
                              "typeIdentifier": "t_contract$_CLMintableBurnableToken_$1332",
                              "typeString": "contract CLMintableBurnableToken"
                            }
                          ],
                          "id": 1098,
                          "name": "LaunchedToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 876,
                          "src": "2692:13:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_LaunchedToken_$876_storage_ptr_$",
                            "typeString": "type(struct CryptoLauncher.LaunchedToken storage pointer)"
                          }
                        },
                        "id": 1102,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2692:63:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_LaunchedToken_$876_memory_ptr",
                          "typeString": "struct CryptoLauncher.LaunchedToken memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_LaunchedToken_$876_memory_ptr",
                          "typeString": "struct CryptoLauncher.LaunchedToken memory"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 1090,
                          "name": "_launchedTokens",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 864,
                          "src": "2650:15:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_LaunchedToken_$876_storage_$dyn_storage_$",
                            "typeString": "mapping(address => struct CryptoLauncher.LaunchedToken storage ref[] storage ref)"
                          }
                        },
                        "id": 1096,
                        "indexExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1093,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2674:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1094,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2674:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1092,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2666:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1091,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2666:7:6",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1095,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2666:19:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2650:36:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_LaunchedToken_$876_storage_$dyn_storage",
                          "typeString": "struct CryptoLauncher.LaunchedToken storage ref[] storage ref"
                        }
                      },
                      "id": 1097,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "2650:41:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_LaunchedToken_$876_storage_$returns$__$",
                        "typeString": "function (struct CryptoLauncher.LaunchedToken storage ref)"
                      }
                    },
                    "id": 1103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2650:106:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1104,
                  "nodeType": "ExpressionStatement",
                  "src": "2650:106:6"
                }
              ]
            },
            "functionSelector": "4d59d154",
            "id": 1106,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "launchMintableBurnableToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1064,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1059,
                  "mutability": "mutable",
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "scope": 1106,
                  "src": "2361:18:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1058,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2361:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1061,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 1106,
                  "src": "2381:20:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1060,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2381:6:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1063,
                  "mutability": "mutable",
                  "name": "totalSupply",
                  "nodeType": "VariableDeclaration",
                  "scope": 1106,
                  "src": "2403:19:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1062,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2403:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2360:63:6"
            },
            "returnParameters": {
              "id": 1065,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2439:0:6"
            },
            "scope": 1209,
            "src": "2324:440:6",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1120,
              "nodeType": "Block",
              "src": "2790:96:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1115,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1109,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 846,
                          "src": "2809:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1112,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2827:3:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1113,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2827:10:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1111,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2819:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1110,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2819:7:6",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1114,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2819:19:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2809:29:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616c6c6572206973206e6f7420746865206f776e6572",
                        "id": 1116,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2840:25:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_15ed5034391ed5ef65b8bb8dbcb08f9b6c4034ebcf89f76344a17e1651e92b33",
                          "typeString": "literal_string \"Caller is not the owner\""
                        },
                        "value": "Caller is not the owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_15ed5034391ed5ef65b8bb8dbcb08f9b6c4034ebcf89f76344a17e1651e92b33",
                          "typeString": "literal_string \"Caller is not the owner\""
                        }
                      ],
                      "id": 1108,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2801:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2801:65:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1118,
                  "nodeType": "ExpressionStatement",
                  "src": "2801:65:6"
                },
                {
                  "id": 1119,
                  "nodeType": "PlaceholderStatement",
                  "src": "2877:1:6"
                }
              ]
            },
            "id": 1121,
            "name": "onlyCL",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1107,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2787:2:6"
            },
            "src": "2772:114:6",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1186,
              "nodeType": "Block",
              "src": "2952:506:6",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1130,
                      "name": "action",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1123,
                      "src": "2966:6:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 1133,
                            "name": "TokenType",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 869,
                            "src": "2981:9:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_TokenType_$869_$",
                              "typeString": "type(enum CryptoLauncher.TokenType)"
                            }
                          },
                          "id": 1134,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "SIMPLE_TOKEN",
                          "nodeType": "MemberAccess",
                          "src": "2981:22:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_TokenType_$869",
                            "typeString": "enum CryptoLauncher.TokenType"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_enum$_TokenType_$869",
                            "typeString": "enum CryptoLauncher.TokenType"
                          }
                        ],
                        "id": 1132,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2976:4:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": {
                          "id": 1131,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2976:4:6",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1135,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2976:28:6",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2966:38:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1149,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1143,
                        "name": "action",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1123,
                        "src": "3084:6:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 1146,
                              "name": "TokenType",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 869,
                              "src": "3099:9:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_TokenType_$869_$",
                                "typeString": "type(enum CryptoLauncher.TokenType)"
                              }
                            },
                            "id": 1147,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "MINTABLE_TOKEN",
                            "nodeType": "MemberAccess",
                            "src": "3099:24:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_TokenType_$869",
                              "typeString": "enum CryptoLauncher.TokenType"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_enum$_TokenType_$869",
                              "typeString": "enum CryptoLauncher.TokenType"
                            }
                          ],
                          "id": 1145,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3094:4:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 1144,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "3094:4:6",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1148,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3094:30:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3084:40:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1162,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1156,
                          "name": "action",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1123,
                          "src": "3206:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1159,
                                "name": "TokenType",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 869,
                                "src": "3221:9:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_TokenType_$869_$",
                                  "typeString": "type(enum CryptoLauncher.TokenType)"
                                }
                              },
                              "id": 1160,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "BURNABLE_TOKEN",
                              "nodeType": "MemberAccess",
                              "src": "3221:24:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_TokenType_$869",
                                "typeString": "enum CryptoLauncher.TokenType"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_TokenType_$869",
                                "typeString": "enum CryptoLauncher.TokenType"
                              }
                            ],
                            "id": 1158,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3216:4:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint256_$",
                              "typeString": "type(uint256)"
                            },
                            "typeName": {
                              "id": 1157,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "3216:4:6",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1161,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3216:30:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3206:40:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1175,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1169,
                            "name": "action",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1123,
                            "src": "3328:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 1172,
                                  "name": "TokenType",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 869,
                                  "src": "3343:9:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_TokenType_$869_$",
                                    "typeString": "type(enum CryptoLauncher.TokenType)"
                                  }
                                },
                                "id": 1173,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "MINTABLE_BURNABLE_TOKEN",
                                "nodeType": "MemberAccess",
                                "src": "3343:33:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_TokenType_$869",
                                  "typeString": "enum CryptoLauncher.TokenType"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_enum$_TokenType_$869",
                                  "typeString": "enum CryptoLauncher.TokenType"
                                }
                              ],
                              "id": 1171,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3338:4:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 1170,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "3338:4:6",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1174,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3338:39:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3328:49:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1182,
                        "nodeType": "IfStatement",
                        "src": "3325:126:6",
                        "trueBody": {
                          "id": 1181,
                          "nodeType": "Block",
                          "src": "3378:73:6",
                          "statements": [
                            {
                              "expression": {
                                "id": 1178,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 1176,
                                  "name": "_mintableTokenFee",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 852,
                                  "src": "3393:17:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "id": 1177,
                                  "name": "value",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1125,
                                  "src": "3413:5:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3393:25:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 1179,
                              "nodeType": "ExpressionStatement",
                              "src": "3393:25:6"
                            },
                            {
                              "functionReturnParameters": 1129,
                              "id": 1180,
                              "nodeType": "Return",
                              "src": "3433:7:6"
                            }
                          ]
                        }
                      },
                      "id": 1183,
                      "nodeType": "IfStatement",
                      "src": "3203:248:6",
                      "trueBody": {
                        "id": 1168,
                        "nodeType": "Block",
                        "src": "3247:73:6",
                        "statements": [
                          {
                            "expression": {
                              "id": 1165,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 1163,
                                "name": "_burnableTokenFee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 855,
                                "src": "3262:17:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "id": 1164,
                                "name": "value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1125,
                                "src": "3282:5:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "3262:25:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1166,
                            "nodeType": "ExpressionStatement",
                            "src": "3262:25:6"
                          },
                          {
                            "functionReturnParameters": 1129,
                            "id": 1167,
                            "nodeType": "Return",
                            "src": "3302:7:6"
                          }
                        ]
                      }
                    },
                    "id": 1184,
                    "nodeType": "IfStatement",
                    "src": "3081:370:6",
                    "trueBody": {
                      "id": 1155,
                      "nodeType": "Block",
                      "src": "3125:73:6",
                      "statements": [
                        {
                          "expression": {
                            "id": 1152,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 1150,
                              "name": "_mintableTokenFee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 852,
                              "src": "3140:17:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "id": 1151,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1125,
                              "src": "3160:5:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "3140:25:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1153,
                          "nodeType": "ExpressionStatement",
                          "src": "3140:25:6"
                        },
                        {
                          "functionReturnParameters": 1129,
                          "id": 1154,
                          "nodeType": "Return",
                          "src": "3180:7:6"
                        }
                      ]
                    }
                  },
                  "id": 1185,
                  "nodeType": "IfStatement",
                  "src": "2963:488:6",
                  "trueBody": {
                    "id": 1142,
                    "nodeType": "Block",
                    "src": "3005:71:6",
                    "statements": [
                      {
                        "expression": {
                          "id": 1139,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1137,
                            "name": "_simpleTokenFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 849,
                            "src": "3020:15:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1138,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1125,
                            "src": "3038:5:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3020:23:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1140,
                        "nodeType": "ExpressionStatement",
                        "src": "3020:23:6"
                      },
                      {
                        "functionReturnParameters": 1129,
                        "id": 1141,
                        "nodeType": "Return",
                        "src": "3058:7:6"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "52f7c988",
            "id": 1187,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1128,
                "modifierName": {
                  "id": 1127,
                  "name": "onlyCL",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1121,
                  "src": "2938:6:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "2938:6:6"
              }
            ],
            "name": "setFee",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1126,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1123,
                  "mutability": "mutable",
                  "name": "action",
                  "nodeType": "VariableDeclaration",
                  "scope": 1187,
                  "src": "2910:11:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1122,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2910:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1125,
                  "mutability": "mutable",
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 1187,
                  "src": "2923:13:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1124,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2923:7:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2909:28:6"
            },
            "returnParameters": {
              "id": 1129,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2952:0:6"
            },
            "scope": 1209,
            "src": "2894:564:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1207,
              "nodeType": "Block",
              "src": "3507:75:6",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1201,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "3559:4:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_CryptoLauncher_$1209",
                                    "typeString": "contract CryptoLauncher"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_CryptoLauncher_$1209",
                                    "typeString": "contract CryptoLauncher"
                                  }
                                ],
                                "id": 1200,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3551:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1199,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3551:7:6",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1202,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3551:13:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 1203,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balance",
                            "nodeType": "MemberAccess",
                            "src": "3551:21:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 1195,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "3534:3:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1196,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "3534:10:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 1194,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3526:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_payable_$",
                                "typeString": "type(address payable)"
                              },
                              "typeName": {
                                "id": 1193,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3526:8:6",
                                "stateMutability": "payable",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 1197,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3526:19:6",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "id": 1198,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "send",
                          "nodeType": "MemberAccess",
                          "src": "3526:24:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_send_nonpayable$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) returns (bool)"
                          }
                        },
                        "id": 1204,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3526:47:6",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1192,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3518:7:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3518:56:6",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1206,
                  "nodeType": "ExpressionStatement",
                  "src": "3518:56:6"
                }
              ]
            },
            "functionSelector": "24600fc3",
            "id": 1208,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1190,
                "modifierName": {
                  "id": 1189,
                  "name": "onlyCL",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1121,
                  "src": "3491:6:6"
                },
                "nodeType": "ModifierInvocation",
                "src": "3491:6:6"
              }
            ],
            "name": "withdrawFunds",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1188,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3488:2:6"
            },
            "returnParameters": {
              "id": 1191,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3507:0:6"
            },
            "scope": 1209,
            "src": "3466:116:6",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1210,
        "src": "234:3353:6"
      }
    ],
    "src": "39:3548:6"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.4",
  "updatedAt": "2021-12-19T21:50:46.862Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}